
syntax = "proto3";
// system_tenant_package 租户套餐包
package tenant;
option go_package = "cloud/service/system/tenant;tenant";
import "google/protobuf/timestamp.proto";
import "pagination.proto";

// SystemTenantPackageObject 数据对象
message SystemTenantPackageObject {
	// @inject_tag: db:"id" json:"id"
	optional int64 id = 1; //套餐编号
	// @inject_tag: db:"name" json:"name"
	optional string name = 2; //套餐名称
	// @inject_tag: db:"status" json:"status"
	optional int32 status = 3; //状态（0正常 1停用）
	// @inject_tag: db:"menu_ids" json:"menuIds"
	optional bytes menu_ids = 4; //目录编号
	// @inject_tag: db:"remark" json:"remark"
	optional string remark = 5; //备注
	// @inject_tag: db:"deleted" json:"deleted"
	optional int32 deleted = 6; //是否删除(0否 1是)
	// @inject_tag: db:"creator" json:"creator"
	optional string creator = 7; //创建人
	// @inject_tag: db:"create_time" json:"createTime"
	google.protobuf.Timestamp create_time = 8; //创建时间
	// @inject_tag: db:"updater" json:"updater"
	optional string updater = 9; //更新人
	// @inject_tag: db:"update_time" json:"updateTime"
	google.protobuf.Timestamp update_time = 10; //更新时间
}

// SystemTenantPackageTotalResponse 列表数据总量
message SystemTenantPackageTotalResponse {
	int64 code = 1;
	string msg = 2;
	int64 data = 3;
}
// SystemTenantPackageCreateRequest 创建数据请求
message SystemTenantPackageCreateRequest {
	SystemTenantPackageObject data = 1;
}
// SystemTenantPackageCreateResponse 创建数据响应
message SystemTenantPackageCreateResponse {
	int64 code = 1;
	string msg = 2;
	int64 data = 3;
}
// SystemTenantPackageUpdateRequest 更新数据请求
message SystemTenantPackageUpdateRequest {
	// @inject_tag: db:"id" json:"id"
	int64 id = 1; //套餐编号
	SystemTenantPackageObject data = 2;
}
// SystemTenantPackageUpdateResponse 更新数据响应
message SystemTenantPackageUpdateResponse {
	int64 code = 1;
	string msg = 2;
}
// SystemTenantPackageDeleteRequest 删除数据请求
message SystemTenantPackageDeleteRequest {
	// @inject_tag: db:"id" json:"id"
	int64 id = 1; //套餐编号
}
// SystemTenantPackageDeleteResponse 删除数据响应
message SystemTenantPackageDeleteResponse {
	int64 code = 1;
	string msg = 2;
}
// SystemTenantPackageRequest 查询单条数据请求
message SystemTenantPackageRequest {
	// @inject_tag: db:"id" json:"id"
	int64 id = 1; //套餐编号
}
// SystemTenantPackageResponse 查询单条数据响应
message SystemTenantPackageResponse {
	int64 code = 1;
	string msg = 2;
	SystemTenantPackageObject data = 3;
}
// SystemTenantPackageRecoverRequest 恢复数据请求
message SystemTenantPackageRecoverRequest {
	// @inject_tag: db:"id" json:"id"
	int64 id = 1; //套餐编号
}
// SystemTenantPackageRecoverResponse 删除数据响应
message SystemTenantPackageRecoverResponse {
	int64 code = 1;
	string msg = 2;
}
// SystemTenantPackageListRequest 列表数据
message SystemTenantPackageListRequest {
	
	// @inject_tag: db:"deleted" json:"deleted"
	optional int32 deleted = 1; // 是否删除(0否 1是)
	// @inject_tag: db:"status" json:"status"
	optional int32 status = 2; // 状态（0正常 1停用）
	// @inject_tag: db:"name" json:"name"
	optional string name = 3; // 套餐名称
	// @inject_tag: db:"pagination" json:"pagination"
	optional pagination.PaginationRequest pagination = 4; // 分页

}

// SystemTenantPackageListResponse 数据响应
message SystemTenantPackageListResponse {
	int64 code = 1;
  	string msg = 2;
	repeated SystemTenantPackageObject data = 3;
}

// SystemTenantPackageTotalRequest 列表数据
message SystemTenantPackageListTotalRequest {
	// @inject_tag: db:"deleted" json:"deleted"
	optional int32 deleted = 1; // 是否删除(0否 1是)
	// @inject_tag: db:"status" json:"status"
	optional int32 status = 2; // 状态（0正常 1停用）
	// @inject_tag: db:"name" json:"name"
	optional string name = 3; // 套餐名称
}

// SystemTenantPackageService 服务
service SystemTenantPackageService{
	rpc SystemTenantPackageCreate(SystemTenantPackageCreateRequest) returns (SystemTenantPackageCreateResponse);
	rpc SystemTenantPackageUpdate(SystemTenantPackageUpdateRequest) returns (SystemTenantPackageUpdateResponse);
	rpc SystemTenantPackageDelete(SystemTenantPackageDeleteRequest) returns (SystemTenantPackageDeleteResponse);
	rpc SystemTenantPackage(SystemTenantPackageRequest) returns (SystemTenantPackageResponse);
	rpc SystemTenantPackageRecover(SystemTenantPackageRecoverRequest) returns (SystemTenantPackageRecoverResponse);
	rpc SystemTenantPackageList(SystemTenantPackageListRequest) returns (SystemTenantPackageListResponse);
	rpc SystemTenantPackageListTotal(SystemTenantPackageListTotalRequest) returns (SystemTenantPackageTotalResponse);
}
