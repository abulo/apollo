
syntax = "proto3";
// pay_refund 退款订单
package refund;
option go_package = "cloud/service/pay/refund;refund";
import "google/protobuf/timestamp.proto";
import "pagination.proto";

// PayRefundObject 数据对象
message PayRefundObject {
	// @inject_tag: db:"id" json:"id"
	optional int64 id = 1; //支付退款编号
	// @inject_tag: db:"no" json:"no"
	optional string no = 2; //退款单号
	// @inject_tag: db:"app_id" json:"appId"
	optional int64 app_id = 3; //应用编号
	// @inject_tag: db:"channel_id" json:"channelId"
	optional int64 channel_id = 4; //渠道编号
	// @inject_tag: db:"channel_code" json:"channelCode"
	optional string channel_code = 5; //渠道编码
	// @inject_tag: db:"order_id" json:"orderId"
	optional int64 order_id = 6; //支付订单编号 pay_order 表id
	// @inject_tag: db:"order_no" json:"orderNo"
	optional string order_no = 7; //支付订单 no
	// @inject_tag: db:"merchant_order_id" json:"merchantOrderId"
	optional string merchant_order_id = 8; //商户订单编号（商户系统生成）
	// @inject_tag: db:"merchant_refund_id" json:"merchantRefundId"
	optional string merchant_refund_id = 9; //商户退款订单号（商户系统生成）
	// @inject_tag: db:"notify_url" json:"notifyUrl"
	optional string notify_url = 10; //异步通知商户地址
	// @inject_tag: db:"status" json:"status"
	optional int32 status = 11; //退款状态
	// @inject_tag: db:"pay_price" json:"payPrice"
	optional int64 pay_price = 12; //支付金额,单位分
	// @inject_tag: db:"refund_price" json:"refundPrice"
	optional int64 refund_price = 13; //退款金额,单位分
	// @inject_tag: db:"reason" json:"reason"
	optional string reason = 14; //退款原因
	// @inject_tag: db:"user_ip" json:"userIp"
	optional string user_ip = 15; //ip
	// @inject_tag: db:"channel_order_no" json:"channelOrderNo"
	optional string channel_order_no = 16; //渠道订单号，pay_order 中的 channel_order_no 对应
	// @inject_tag: db:"channel_refund_no" json:"channelRefundNo"
	optional string channel_refund_no = 17; //渠道退款单号，渠道返
	// @inject_tag: db:"success_time" json:"successTime"
	google.protobuf.Timestamp success_time = 18; //退款成功时间
	// @inject_tag: db:"channel_error_code" json:"channelErrorCode"
	optional string channel_error_code = 19; //渠道调用报错时，错误码
	// @inject_tag: db:"channel_error_msg" json:"channelErrorMsg"
	optional string channel_error_msg = 20; //渠道调用报错时，错误信息
	// @inject_tag: db:"channel_notify_data" json:"channelNotifyData"
	optional string channel_notify_data = 21; //支付渠道异步通知的内容
	// @inject_tag: db:"deleted" json:"deleted"
	optional int32 deleted = 22; //删除
	// @inject_tag: db:"tenant_id" json:"tenantId"
	optional int64 tenant_id = 23; //租户
	// @inject_tag: db:"creator" json:"creator"
	optional string creator = 24; //创建人
	// @inject_tag: db:"create_time" json:"createTime"
	google.protobuf.Timestamp create_time = 25; //创建时间
	// @inject_tag: db:"updater" json:"updater"
	optional string updater = 26; //更新人
	// @inject_tag: db:"update_time" json:"updateTime"
	google.protobuf.Timestamp update_time = 27; //更新时间
}
// PayRefundTotalResponse 列表数据总量
message PayRefundTotalResponse {
	int64 code = 1;
	string msg = 2;
	int64 data = 3;
}
// PayRefundCreateRequest 创建数据请求
message PayRefundCreateRequest {
	PayRefundObject data = 1;
}
// PayRefundCreateResponse 创建数据响应
message PayRefundCreateResponse {
	int64 code = 1;
	string msg = 2;
	int64 data = 3;
}
// PayRefundUpdateRequest 更新数据请求
message PayRefundUpdateRequest {
	// @inject_tag: db:"id" json:"id"
	int64 id = 1; //支付退款编号
	PayRefundObject data = 2;
}
// PayRefundUpdateResponse 更新数据响应
message PayRefundUpdateResponse {
	int64 code = 1;
	string msg = 2;
}
// PayRefundDeleteRequest 删除数据请求
message PayRefundDeleteRequest {
	// @inject_tag: db:"id" json:"id"
	int64 id = 1; //支付退款编号
}
// PayRefundDeleteResponse 删除数据响应
message PayRefundDeleteResponse {
	int64 code = 1;
	string msg = 2;
}
// PayRefundRequest 查询单条数据请求
message PayRefundRequest {
	// @inject_tag: db:"id" json:"id"
	int64 id = 1; //支付退款编号
}
// PayRefundResponse 查询单条数据响应
message PayRefundResponse {
	int64 code = 1;
	string msg = 2;
	PayRefundObject data = 3;
}
// PayRefundRecoverRequest 恢复数据请求
message PayRefundRecoverRequest {
	// @inject_tag: db:"id" json:"id"
	int64 id = 1; //支付退款编号
}
// PayRefundRecoverResponse 删除数据响应
message PayRefundRecoverResponse {
	int64 code = 1;
	string msg = 2;
}
// PayRefundListRequest 列表数据
message PayRefundListRequest {
	
	// @inject_tag: db:"tenant_id" json:"tenantId"
	optional int64 tenant_id = 1; // 租户
	// @inject_tag: db:"deleted" json:"deleted"
	optional int32 deleted = 2; // 删除
	// @inject_tag: db:"app_id" json:"appId"
	optional int64 app_id = 3; // 应用编号
	// @inject_tag: db:"channel_id" json:"channelId"
	optional int64 channel_id = 4; // 渠道编号
	// @inject_tag: db:"channel_code" json:"channelCode"
	optional string channel_code = 5; // 渠道编码
	// @inject_tag: db:"merchant_order_id" json:"merchantOrderId"
	optional string merchant_order_id = 6; // 商户订单编号（商户系统生成）
	// @inject_tag: db:"order_id" json:"orderId"
	optional int64 order_id = 7; // 支付订单编号 pay_order 表id
	// @inject_tag: db:"order_no" json:"orderNo"
	optional string order_no = 8; // 支付订单 no
	// @inject_tag: db:"channel_order_no" json:"channelOrderNo"
	optional string channel_order_no = 9; // 渠道订单号，pay_order 中的 channel_order_no 对应
	// @inject_tag: db:"status" json:"status"
	optional int32 status = 10; // 退款状态
	// @inject_tag: db:"begin_create_time" json:"beginCreateTime"
	google.protobuf.Timestamp begin_create_time = 11; // 创建时间
	// @inject_tag: db:"finish_create_time" json:"finishCreateTime"
	google.protobuf.Timestamp finish_create_time = 12; // 创建时间

	// @inject_tag: db:"pagination" json:"pagination"
	optional pagination.PaginationRequest pagination = 13; // 分页
}

// PayRefundListResponse 数据响应
message PayRefundListResponse {
	int64 code = 1;
  	string msg = 2;
	repeated PayRefundObject data = 3;
}
// PayRefundListTotalRequest 列表数据
message PayRefundListTotalRequest {
	
	// @inject_tag: db:"tenant_id" json:"tenantId"
	optional int64 tenant_id = 1; // 租户
	// @inject_tag: db:"deleted" json:"deleted"
	optional int32 deleted = 2; // 删除
	// @inject_tag: db:"app_id" json:"appId"
	optional int64 app_id = 3; // 应用编号
	// @inject_tag: db:"channel_id" json:"channelId"
	optional int64 channel_id = 4; // 渠道编号
	// @inject_tag: db:"channel_code" json:"channelCode"
	optional string channel_code = 5; // 渠道编码
	// @inject_tag: db:"merchant_order_id" json:"merchantOrderId"
	optional string merchant_order_id = 6; // 商户订单编号（商户系统生成）
	// @inject_tag: db:"order_id" json:"orderId"
	optional int64 order_id = 7; // 支付订单编号 pay_order 表id
	// @inject_tag: db:"order_no" json:"orderNo"
	optional string order_no = 8; // 支付订单 no
	// @inject_tag: db:"channel_order_no" json:"channelOrderNo"
	optional string channel_order_no = 9; // 渠道订单号，pay_order 中的 channel_order_no 对应
	// @inject_tag: db:"status" json:"status"
	optional int32 status = 10; // 退款状态
	// @inject_tag: db:"begin_create_time" json:"beginCreateTime"
	google.protobuf.Timestamp begin_create_time = 11; // 创建时间
	// @inject_tag: db:"finish_create_time" json:"finishCreateTime"
	google.protobuf.Timestamp finish_create_time = 12; // 创建时间

}


// PayRefundService 服务
service PayRefundService{
	rpc PayRefundCreate(PayRefundCreateRequest) returns (PayRefundCreateResponse);
	rpc PayRefundUpdate(PayRefundUpdateRequest) returns (PayRefundUpdateResponse);
	rpc PayRefundDelete(PayRefundDeleteRequest) returns (PayRefundDeleteResponse);
	rpc PayRefund(PayRefundRequest) returns (PayRefundResponse);
	rpc PayRefundRecover(PayRefundRecoverRequest) returns (PayRefundRecoverResponse);
	rpc PayRefundList(PayRefundListRequest) returns (PayRefundListResponse);
	rpc PayRefundListTotal(PayRefundListTotalRequest) returns (PayRefundTotalResponse);
}
