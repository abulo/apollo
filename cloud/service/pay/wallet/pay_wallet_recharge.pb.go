// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.1
// source: pay_wallet_recharge.proto

// pay_wallet_recharge 会员钱包充值

package wallet

import (
	pagination "cloud/service/pagination"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PayWalletRechargeObject 数据对象
type PayWalletRechargeObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id *int64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id" db:"id"` //编号
	// @inject_tag: db:"wallet_id" json:"walletId"
	WalletId *int64 `protobuf:"varint,2,opt,name=wallet_id,json=walletId,proto3,oneof" json:"walletId" db:"wallet_id"` //会员钱包id
	// @inject_tag: db:"total_price" json:"totalPrice"
	TotalPrice *int64 `protobuf:"varint,3,opt,name=total_price,json=totalPrice,proto3,oneof" json:"totalPrice" db:"total_price"` //用户实际到账余额，例如充 100 送 20，则该值是 120
	// @inject_tag: db:"pay_price" json:"payPrice"
	PayPrice *int64 `protobuf:"varint,4,opt,name=pay_price,json=payPrice,proto3,oneof" json:"payPrice" db:"pay_price"` //实际支付金额
	// @inject_tag: db:"bonus_price" json:"bonusPrice"
	BonusPrice *int64 `protobuf:"varint,5,opt,name=bonus_price,json=bonusPrice,proto3,oneof" json:"bonusPrice" db:"bonus_price"` //钱包赠送金额
	// @inject_tag: db:"package_id" json:"packageId"
	PackageId *int64 `protobuf:"varint,6,opt,name=package_id,json=packageId,proto3,oneof" json:"packageId" db:"package_id"` //充值套餐编号
	// @inject_tag: db:"pay_status" json:"payStatus"
	PayStatus *int32 `protobuf:"varint,7,opt,name=pay_status,json=payStatus,proto3,oneof" json:"payStatus" db:"pay_status"` //是否已支付：[0:未支付 1:已经支付过]
	// @inject_tag: db:"pay_order_id" json:"payOrderId"
	PayOrderId *int64 `protobuf:"varint,8,opt,name=pay_order_id,json=payOrderId,proto3,oneof" json:"payOrderId" db:"pay_order_id"` //支付订单编号
	// @inject_tag: db:"pay_channel_code" json:"payChannelCode"
	PayChannelCode *string `protobuf:"bytes,9,opt,name=pay_channel_code,json=payChannelCode,proto3,oneof" json:"payChannelCode" db:"pay_channel_code"` //支付成功的支付渠道
	// @inject_tag: db:"pay_time" json:"payTime"
	PayTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=pay_time,json=payTime,proto3" json:"payTime" db:"pay_time"` //订单支付时间
	// @inject_tag: db:"pay_refund_id" json:"payRefundId"
	PayRefundId *int64 `protobuf:"varint,11,opt,name=pay_refund_id,json=payRefundId,proto3,oneof" json:"payRefundId" db:"pay_refund_id"` //支付退款单编号
	// @inject_tag: db:"refund_total_price" json:"refundTotalPrice"
	RefundTotalPrice *int64 `protobuf:"varint,12,opt,name=refund_total_price,json=refundTotalPrice,proto3,oneof" json:"refundTotalPrice" db:"refund_total_price"` //退款金额，包含赠送金额
	// @inject_tag: db:"refund_pay_price" json:"refundPayPrice"
	RefundPayPrice *int64 `protobuf:"varint,13,opt,name=refund_pay_price,json=refundPayPrice,proto3,oneof" json:"refundPayPrice" db:"refund_pay_price"` //退款支付金额
	// @inject_tag: db:"refund_bonus_price" json:"refundBonusPrice"
	RefundBonusPrice *int64 `protobuf:"varint,14,opt,name=refund_bonus_price,json=refundBonusPrice,proto3,oneof" json:"refundBonusPrice" db:"refund_bonus_price"` //退款钱包赠送金额
	// @inject_tag: db:"refund_time" json:"refundTime"
	RefundTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=refund_time,json=refundTime,proto3" json:"refundTime" db:"refund_time"` //退款时间
	// @inject_tag: db:"refund_status" json:"refundStatus"
	RefundStatus *int32 `protobuf:"varint,16,opt,name=refund_status,json=refundStatus,proto3,oneof" json:"refundStatus" db:"refund_status"` //退款状态
	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,17,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` //删除
	// @inject_tag: db:"tenant_id" json:"tenantId"
	TenantId *int64 `protobuf:"varint,18,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenantId" db:"tenant_id"` //租户
	// @inject_tag: db:"creator" json:"creator"
	Creator *string `protobuf:"bytes,19,opt,name=creator,proto3,oneof" json:"creator" db:"creator"` //创建人
	// @inject_tag: db:"create_time" json:"createTime"
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=create_time,json=createTime,proto3" json:"createTime" db:"create_time"` //创建时间
	// @inject_tag: db:"updater" json:"updater"
	Updater *string `protobuf:"bytes,21,opt,name=updater,proto3,oneof" json:"updater" db:"updater"` //更新人
	// @inject_tag: db:"update_time" json:"updateTime"
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=update_time,json=updateTime,proto3" json:"updateTime" db:"update_time"` //更新时间
}

func (x *PayWalletRechargeObject) Reset() {
	*x = PayWalletRechargeObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeObject) ProtoMessage() {}

func (x *PayWalletRechargeObject) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeObject.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeObject) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{0}
}

func (x *PayWalletRechargeObject) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PayWalletRechargeObject) GetWalletId() int64 {
	if x != nil && x.WalletId != nil {
		return *x.WalletId
	}
	return 0
}

func (x *PayWalletRechargeObject) GetTotalPrice() int64 {
	if x != nil && x.TotalPrice != nil {
		return *x.TotalPrice
	}
	return 0
}

func (x *PayWalletRechargeObject) GetPayPrice() int64 {
	if x != nil && x.PayPrice != nil {
		return *x.PayPrice
	}
	return 0
}

func (x *PayWalletRechargeObject) GetBonusPrice() int64 {
	if x != nil && x.BonusPrice != nil {
		return *x.BonusPrice
	}
	return 0
}

func (x *PayWalletRechargeObject) GetPackageId() int64 {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return 0
}

func (x *PayWalletRechargeObject) GetPayStatus() int32 {
	if x != nil && x.PayStatus != nil {
		return *x.PayStatus
	}
	return 0
}

func (x *PayWalletRechargeObject) GetPayOrderId() int64 {
	if x != nil && x.PayOrderId != nil {
		return *x.PayOrderId
	}
	return 0
}

func (x *PayWalletRechargeObject) GetPayChannelCode() string {
	if x != nil && x.PayChannelCode != nil {
		return *x.PayChannelCode
	}
	return ""
}

func (x *PayWalletRechargeObject) GetPayTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PayTime
	}
	return nil
}

func (x *PayWalletRechargeObject) GetPayRefundId() int64 {
	if x != nil && x.PayRefundId != nil {
		return *x.PayRefundId
	}
	return 0
}

func (x *PayWalletRechargeObject) GetRefundTotalPrice() int64 {
	if x != nil && x.RefundTotalPrice != nil {
		return *x.RefundTotalPrice
	}
	return 0
}

func (x *PayWalletRechargeObject) GetRefundPayPrice() int64 {
	if x != nil && x.RefundPayPrice != nil {
		return *x.RefundPayPrice
	}
	return 0
}

func (x *PayWalletRechargeObject) GetRefundBonusPrice() int64 {
	if x != nil && x.RefundBonusPrice != nil {
		return *x.RefundBonusPrice
	}
	return 0
}

func (x *PayWalletRechargeObject) GetRefundTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RefundTime
	}
	return nil
}

func (x *PayWalletRechargeObject) GetRefundStatus() int32 {
	if x != nil && x.RefundStatus != nil {
		return *x.RefundStatus
	}
	return 0
}

func (x *PayWalletRechargeObject) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *PayWalletRechargeObject) GetTenantId() int64 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *PayWalletRechargeObject) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *PayWalletRechargeObject) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *PayWalletRechargeObject) GetUpdater() string {
	if x != nil && x.Updater != nil {
		return *x.Updater
	}
	return ""
}

func (x *PayWalletRechargeObject) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// PayWalletRechargeTotalResponse 列表数据总量
type PayWalletRechargeTotalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data int64  `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayWalletRechargeTotalResponse) Reset() {
	*x = PayWalletRechargeTotalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeTotalResponse) ProtoMessage() {}

func (x *PayWalletRechargeTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeTotalResponse.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeTotalResponse) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{1}
}

func (x *PayWalletRechargeTotalResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayWalletRechargeTotalResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayWalletRechargeTotalResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// PayWalletRechargeCreateRequest 创建数据请求
type PayWalletRechargeCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PayWalletRechargeObject `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayWalletRechargeCreateRequest) Reset() {
	*x = PayWalletRechargeCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeCreateRequest) ProtoMessage() {}

func (x *PayWalletRechargeCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeCreateRequest.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeCreateRequest) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{2}
}

func (x *PayWalletRechargeCreateRequest) GetData() *PayWalletRechargeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// PayWalletRechargeCreateResponse 创建数据响应
type PayWalletRechargeCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data int64  `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayWalletRechargeCreateResponse) Reset() {
	*x = PayWalletRechargeCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeCreateResponse) ProtoMessage() {}

func (x *PayWalletRechargeCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeCreateResponse.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeCreateResponse) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{3}
}

func (x *PayWalletRechargeCreateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayWalletRechargeCreateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayWalletRechargeCreateResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// PayWalletRechargeUpdateRequest 更新数据请求
type PayWalletRechargeUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id   int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //编号
	Data *PayWalletRechargeObject `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayWalletRechargeUpdateRequest) Reset() {
	*x = PayWalletRechargeUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeUpdateRequest) ProtoMessage() {}

func (x *PayWalletRechargeUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeUpdateRequest.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{4}
}

func (x *PayWalletRechargeUpdateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayWalletRechargeUpdateRequest) GetData() *PayWalletRechargeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// PayWalletRechargeUpdateResponse 更新数据响应
type PayWalletRechargeUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PayWalletRechargeUpdateResponse) Reset() {
	*x = PayWalletRechargeUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeUpdateResponse) ProtoMessage() {}

func (x *PayWalletRechargeUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeUpdateResponse.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{5}
}

func (x *PayWalletRechargeUpdateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayWalletRechargeUpdateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// PayWalletRechargeDeleteRequest 删除数据请求
type PayWalletRechargeDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //编号
}

func (x *PayWalletRechargeDeleteRequest) Reset() {
	*x = PayWalletRechargeDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeDeleteRequest) ProtoMessage() {}

func (x *PayWalletRechargeDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeDeleteRequest.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{6}
}

func (x *PayWalletRechargeDeleteRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// PayWalletRechargeDeleteResponse 删除数据响应
type PayWalletRechargeDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PayWalletRechargeDeleteResponse) Reset() {
	*x = PayWalletRechargeDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeDeleteResponse) ProtoMessage() {}

func (x *PayWalletRechargeDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeDeleteResponse.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{7}
}

func (x *PayWalletRechargeDeleteResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayWalletRechargeDeleteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// PayWalletRechargeRequest 查询单条数据请求
type PayWalletRechargeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //编号
}

func (x *PayWalletRechargeRequest) Reset() {
	*x = PayWalletRechargeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeRequest) ProtoMessage() {}

func (x *PayWalletRechargeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeRequest.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeRequest) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{8}
}

func (x *PayWalletRechargeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// PayWalletRechargeResponse 查询单条数据响应
type PayWalletRechargeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PayWalletRechargeObject `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayWalletRechargeResponse) Reset() {
	*x = PayWalletRechargeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeResponse) ProtoMessage() {}

func (x *PayWalletRechargeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeResponse.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeResponse) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{9}
}

func (x *PayWalletRechargeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayWalletRechargeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayWalletRechargeResponse) GetData() *PayWalletRechargeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// PayWalletRechargeRecoverRequest 恢复数据请求
type PayWalletRechargeRecoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //编号
}

func (x *PayWalletRechargeRecoverRequest) Reset() {
	*x = PayWalletRechargeRecoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeRecoverRequest) ProtoMessage() {}

func (x *PayWalletRechargeRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeRecoverRequest.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeRecoverRequest) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{10}
}

func (x *PayWalletRechargeRecoverRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// PayWalletRechargeRecoverResponse 删除数据响应
type PayWalletRechargeRecoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PayWalletRechargeRecoverResponse) Reset() {
	*x = PayWalletRechargeRecoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeRecoverResponse) ProtoMessage() {}

func (x *PayWalletRechargeRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeRecoverResponse.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeRecoverResponse) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{11}
}

func (x *PayWalletRechargeRecoverResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayWalletRechargeRecoverResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// PayWalletRechargeListRequest 列表数据
type PayWalletRechargeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"tenant_id" json:"tenantId"
	TenantId *int64 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenantId" db:"tenant_id"` // 租户
	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,2,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` // 删除
	// @inject_tag: db:"wallet_id" json:"walletId"
	WalletId *int64 `protobuf:"varint,3,opt,name=wallet_id,json=walletId,proto3,oneof" json:"walletId" db:"wallet_id"` // 会员钱包id
	// @inject_tag: db:"package_id" json:"packageId"
	PackageId *int64 `protobuf:"varint,4,opt,name=package_id,json=packageId,proto3,oneof" json:"packageId" db:"package_id"` // 充值套餐编号
	// @inject_tag: db:"pay_status" json:"payStatus"
	PayStatus *int32 `protobuf:"varint,5,opt,name=pay_status,json=payStatus,proto3,oneof" json:"payStatus" db:"pay_status"` // 是否已支付：[0:未支付 1:已经支付过]
	// @inject_tag: db:"pay_order_id" json:"payOrderId"
	PayOrderId *int64 `protobuf:"varint,6,opt,name=pay_order_id,json=payOrderId,proto3,oneof" json:"payOrderId" db:"pay_order_id"` // 支付订单编号
	// @inject_tag: db:"pay_channel_code" json:"payChannelCode"
	PayChannelCode *string `protobuf:"bytes,7,opt,name=pay_channel_code,json=payChannelCode,proto3,oneof" json:"payChannelCode" db:"pay_channel_code"` // 支付成功的支付渠道
	// @inject_tag: db:"begin_pay_time" json:"beginPayTime"
	BeginPayTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=begin_pay_time,json=beginPayTime,proto3,oneof" json:"beginPayTime" db:"begin_pay_time"` // 订单支付时间
	// @inject_tag: db:"finish_pay_time" json:"finishPayTime"
	FinishPayTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=finish_pay_time,json=finishPayTime,proto3,oneof" json:"finishPayTime" db:"finish_pay_time"` // 订单支付时间
	// @inject_tag: db:"refund_status" json:"refundStatus"
	RefundStatus *int32 `protobuf:"varint,10,opt,name=refund_status,json=refundStatus,proto3,oneof" json:"refundStatus" db:"refund_status"` // 退款状态
	// @inject_tag: db:"pay_refund_id" json:"payRefundId"
	PayRefundId *int64 `protobuf:"varint,11,opt,name=pay_refund_id,json=payRefundId,proto3,oneof" json:"payRefundId" db:"pay_refund_id"` // 支付退款单编号
	// @inject_tag: db:"begin_refund_time" json:"beginRefundTime"
	BeginRefundTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=begin_refund_time,json=beginRefundTime,proto3,oneof" json:"beginRefundTime" db:"begin_refund_time"` // 退款时间
	// @inject_tag: db:"finish_refund_time" json:"finishRefundTime"
	FinishRefundTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=finish_refund_time,json=finishRefundTime,proto3,oneof" json:"finishRefundTime" db:"finish_refund_time"` // 退款时间
	// @inject_tag: db:"pagination" json:"pagination"
	Pagination *pagination.PaginationRequest `protobuf:"bytes,14,opt,name=pagination,proto3,oneof" json:"pagination" db:"pagination"` // 分页
}

func (x *PayWalletRechargeListRequest) Reset() {
	*x = PayWalletRechargeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeListRequest) ProtoMessage() {}

func (x *PayWalletRechargeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeListRequest.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeListRequest) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{12}
}

func (x *PayWalletRechargeListRequest) GetTenantId() int64 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *PayWalletRechargeListRequest) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *PayWalletRechargeListRequest) GetWalletId() int64 {
	if x != nil && x.WalletId != nil {
		return *x.WalletId
	}
	return 0
}

func (x *PayWalletRechargeListRequest) GetPackageId() int64 {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return 0
}

func (x *PayWalletRechargeListRequest) GetPayStatus() int32 {
	if x != nil && x.PayStatus != nil {
		return *x.PayStatus
	}
	return 0
}

func (x *PayWalletRechargeListRequest) GetPayOrderId() int64 {
	if x != nil && x.PayOrderId != nil {
		return *x.PayOrderId
	}
	return 0
}

func (x *PayWalletRechargeListRequest) GetPayChannelCode() string {
	if x != nil && x.PayChannelCode != nil {
		return *x.PayChannelCode
	}
	return ""
}

func (x *PayWalletRechargeListRequest) GetBeginPayTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginPayTime
	}
	return nil
}

func (x *PayWalletRechargeListRequest) GetFinishPayTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishPayTime
	}
	return nil
}

func (x *PayWalletRechargeListRequest) GetRefundStatus() int32 {
	if x != nil && x.RefundStatus != nil {
		return *x.RefundStatus
	}
	return 0
}

func (x *PayWalletRechargeListRequest) GetPayRefundId() int64 {
	if x != nil && x.PayRefundId != nil {
		return *x.PayRefundId
	}
	return 0
}

func (x *PayWalletRechargeListRequest) GetBeginRefundTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginRefundTime
	}
	return nil
}

func (x *PayWalletRechargeListRequest) GetFinishRefundTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishRefundTime
	}
	return nil
}

func (x *PayWalletRechargeListRequest) GetPagination() *pagination.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// PayWalletRechargeListResponse 数据响应
type PayWalletRechargeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*PayWalletRechargeObject `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PayWalletRechargeListResponse) Reset() {
	*x = PayWalletRechargeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeListResponse) ProtoMessage() {}

func (x *PayWalletRechargeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeListResponse.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeListResponse) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{13}
}

func (x *PayWalletRechargeListResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayWalletRechargeListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayWalletRechargeListResponse) GetData() []*PayWalletRechargeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// PayWalletRechargeListTotalRequest 列表数据
type PayWalletRechargeListTotalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"tenant_id" json:"tenantId"
	TenantId *int64 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenantId" db:"tenant_id"` // 租户
	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,2,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` // 删除
	// @inject_tag: db:"wallet_id" json:"walletId"
	WalletId *int64 `protobuf:"varint,3,opt,name=wallet_id,json=walletId,proto3,oneof" json:"walletId" db:"wallet_id"` // 会员钱包id
	// @inject_tag: db:"package_id" json:"packageId"
	PackageId *int64 `protobuf:"varint,4,opt,name=package_id,json=packageId,proto3,oneof" json:"packageId" db:"package_id"` // 充值套餐编号
	// @inject_tag: db:"pay_status" json:"payStatus"
	PayStatus *int32 `protobuf:"varint,5,opt,name=pay_status,json=payStatus,proto3,oneof" json:"payStatus" db:"pay_status"` // 是否已支付：[0:未支付 1:已经支付过]
	// @inject_tag: db:"pay_order_id" json:"payOrderId"
	PayOrderId *int64 `protobuf:"varint,6,opt,name=pay_order_id,json=payOrderId,proto3,oneof" json:"payOrderId" db:"pay_order_id"` // 支付订单编号
	// @inject_tag: db:"pay_channel_code" json:"payChannelCode"
	PayChannelCode *string `protobuf:"bytes,7,opt,name=pay_channel_code,json=payChannelCode,proto3,oneof" json:"payChannelCode" db:"pay_channel_code"` // 支付成功的支付渠道
	// @inject_tag: db:"begin_pay_time" json:"beginPayTime"
	BeginPayTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=begin_pay_time,json=beginPayTime,proto3,oneof" json:"beginPayTime" db:"begin_pay_time"` // 订单支付时间
	// @inject_tag: db:"finish_pay_time" json:"finishPayTime"
	FinishPayTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=finish_pay_time,json=finishPayTime,proto3,oneof" json:"finishPayTime" db:"finish_pay_time"` // 订单支付时间
	// @inject_tag: db:"refund_status" json:"refundStatus"
	RefundStatus *int32 `protobuf:"varint,10,opt,name=refund_status,json=refundStatus,proto3,oneof" json:"refundStatus" db:"refund_status"` // 退款状态
	// @inject_tag: db:"pay_refund_id" json:"payRefundId"
	PayRefundId *int64 `protobuf:"varint,11,opt,name=pay_refund_id,json=payRefundId,proto3,oneof" json:"payRefundId" db:"pay_refund_id"` // 支付退款单编号
	// @inject_tag: db:"begin_refund_time" json:"beginRefundTime"
	BeginRefundTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=begin_refund_time,json=beginRefundTime,proto3,oneof" json:"beginRefundTime" db:"begin_refund_time"` // 退款时间
	// @inject_tag: db:"finish_refund_time" json:"finishRefundTime"
	FinishRefundTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=finish_refund_time,json=finishRefundTime,proto3,oneof" json:"finishRefundTime" db:"finish_refund_time"` // 退款时间
}

func (x *PayWalletRechargeListTotalRequest) Reset() {
	*x = PayWalletRechargeListTotalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_wallet_recharge_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayWalletRechargeListTotalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayWalletRechargeListTotalRequest) ProtoMessage() {}

func (x *PayWalletRechargeListTotalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_wallet_recharge_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayWalletRechargeListTotalRequest.ProtoReflect.Descriptor instead.
func (*PayWalletRechargeListTotalRequest) Descriptor() ([]byte, []int) {
	return file_pay_wallet_recharge_proto_rawDescGZIP(), []int{14}
}

func (x *PayWalletRechargeListTotalRequest) GetTenantId() int64 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *PayWalletRechargeListTotalRequest) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *PayWalletRechargeListTotalRequest) GetWalletId() int64 {
	if x != nil && x.WalletId != nil {
		return *x.WalletId
	}
	return 0
}

func (x *PayWalletRechargeListTotalRequest) GetPackageId() int64 {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return 0
}

func (x *PayWalletRechargeListTotalRequest) GetPayStatus() int32 {
	if x != nil && x.PayStatus != nil {
		return *x.PayStatus
	}
	return 0
}

func (x *PayWalletRechargeListTotalRequest) GetPayOrderId() int64 {
	if x != nil && x.PayOrderId != nil {
		return *x.PayOrderId
	}
	return 0
}

func (x *PayWalletRechargeListTotalRequest) GetPayChannelCode() string {
	if x != nil && x.PayChannelCode != nil {
		return *x.PayChannelCode
	}
	return ""
}

func (x *PayWalletRechargeListTotalRequest) GetBeginPayTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginPayTime
	}
	return nil
}

func (x *PayWalletRechargeListTotalRequest) GetFinishPayTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishPayTime
	}
	return nil
}

func (x *PayWalletRechargeListTotalRequest) GetRefundStatus() int32 {
	if x != nil && x.RefundStatus != nil {
		return *x.RefundStatus
	}
	return 0
}

func (x *PayWalletRechargeListTotalRequest) GetPayRefundId() int64 {
	if x != nil && x.PayRefundId != nil {
		return *x.PayRefundId
	}
	return 0
}

func (x *PayWalletRechargeListTotalRequest) GetBeginRefundTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginRefundTime
	}
	return nil
}

func (x *PayWalletRechargeListTotalRequest) GetFinishRefundTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishRefundTime
	}
	return nil
}

var File_pay_wallet_recharge_proto protoreflect.FileDescriptor

var file_pay_wallet_recharge_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x61, 0x79, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x09, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x0a, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x09, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x06, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x08, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0d,
	0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x0a, 0x52, 0x10, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x0b, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0d,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x0e, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x0f, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x11, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x1e, 0x50, 0x61,
	0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x1e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a,
	0x1f, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x1e, 0x50, 0x61,
	0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x47, 0x0a, 0x1f, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x30, 0x0a, 0x1e, 0x50, 0x61,
	0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x1f,
	0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2a, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x76, 0x0a, 0x19, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x1f, 0x50, 0x61, 0x79,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x20,
	0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xd5, 0x07, 0x0a, 0x1c, 0x50, 0x61, 0x79, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x08, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03,
	0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x04, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x61, 0x79,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0e, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x07, 0x52, 0x0c,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x47, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x08, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x50, 0x61,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x11, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x0b, 0x52, 0x0f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x0c, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x0d, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7a,
	0x0a, 0x1d, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x07, 0x0a, 0x21, 0x50,
	0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x70,
	0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0e,
	0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x45, 0x0a, 0x0e, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x07, 0x52, 0x0c, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x61,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x08, 0x52,
	0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x50, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x70,
	0x61, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x0a, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x11, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x0b, 0x52, 0x0f, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x4d, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x0c, 0x52, 0x10, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x15, 0x0a,
	0x13, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x32, 0xfe, 0x05, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x6a, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a,
	0x17, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x50, 0x61, 0x79,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6d, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x15, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x1a, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x29, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x3b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pay_wallet_recharge_proto_rawDescOnce sync.Once
	file_pay_wallet_recharge_proto_rawDescData = file_pay_wallet_recharge_proto_rawDesc
)

func file_pay_wallet_recharge_proto_rawDescGZIP() []byte {
	file_pay_wallet_recharge_proto_rawDescOnce.Do(func() {
		file_pay_wallet_recharge_proto_rawDescData = protoimpl.X.CompressGZIP(file_pay_wallet_recharge_proto_rawDescData)
	})
	return file_pay_wallet_recharge_proto_rawDescData
}

var file_pay_wallet_recharge_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_pay_wallet_recharge_proto_goTypes = []interface{}{
	(*PayWalletRechargeObject)(nil),           // 0: wallet.PayWalletRechargeObject
	(*PayWalletRechargeTotalResponse)(nil),    // 1: wallet.PayWalletRechargeTotalResponse
	(*PayWalletRechargeCreateRequest)(nil),    // 2: wallet.PayWalletRechargeCreateRequest
	(*PayWalletRechargeCreateResponse)(nil),   // 3: wallet.PayWalletRechargeCreateResponse
	(*PayWalletRechargeUpdateRequest)(nil),    // 4: wallet.PayWalletRechargeUpdateRequest
	(*PayWalletRechargeUpdateResponse)(nil),   // 5: wallet.PayWalletRechargeUpdateResponse
	(*PayWalletRechargeDeleteRequest)(nil),    // 6: wallet.PayWalletRechargeDeleteRequest
	(*PayWalletRechargeDeleteResponse)(nil),   // 7: wallet.PayWalletRechargeDeleteResponse
	(*PayWalletRechargeRequest)(nil),          // 8: wallet.PayWalletRechargeRequest
	(*PayWalletRechargeResponse)(nil),         // 9: wallet.PayWalletRechargeResponse
	(*PayWalletRechargeRecoverRequest)(nil),   // 10: wallet.PayWalletRechargeRecoverRequest
	(*PayWalletRechargeRecoverResponse)(nil),  // 11: wallet.PayWalletRechargeRecoverResponse
	(*PayWalletRechargeListRequest)(nil),      // 12: wallet.PayWalletRechargeListRequest
	(*PayWalletRechargeListResponse)(nil),     // 13: wallet.PayWalletRechargeListResponse
	(*PayWalletRechargeListTotalRequest)(nil), // 14: wallet.PayWalletRechargeListTotalRequest
	(*timestamppb.Timestamp)(nil),             // 15: google.protobuf.Timestamp
	(*pagination.PaginationRequest)(nil),      // 16: pagination.PaginationRequest
}
var file_pay_wallet_recharge_proto_depIdxs = []int32{
	15, // 0: wallet.PayWalletRechargeObject.pay_time:type_name -> google.protobuf.Timestamp
	15, // 1: wallet.PayWalletRechargeObject.refund_time:type_name -> google.protobuf.Timestamp
	15, // 2: wallet.PayWalletRechargeObject.create_time:type_name -> google.protobuf.Timestamp
	15, // 3: wallet.PayWalletRechargeObject.update_time:type_name -> google.protobuf.Timestamp
	0,  // 4: wallet.PayWalletRechargeCreateRequest.data:type_name -> wallet.PayWalletRechargeObject
	0,  // 5: wallet.PayWalletRechargeUpdateRequest.data:type_name -> wallet.PayWalletRechargeObject
	0,  // 6: wallet.PayWalletRechargeResponse.data:type_name -> wallet.PayWalletRechargeObject
	15, // 7: wallet.PayWalletRechargeListRequest.begin_pay_time:type_name -> google.protobuf.Timestamp
	15, // 8: wallet.PayWalletRechargeListRequest.finish_pay_time:type_name -> google.protobuf.Timestamp
	15, // 9: wallet.PayWalletRechargeListRequest.begin_refund_time:type_name -> google.protobuf.Timestamp
	15, // 10: wallet.PayWalletRechargeListRequest.finish_refund_time:type_name -> google.protobuf.Timestamp
	16, // 11: wallet.PayWalletRechargeListRequest.pagination:type_name -> pagination.PaginationRequest
	0,  // 12: wallet.PayWalletRechargeListResponse.data:type_name -> wallet.PayWalletRechargeObject
	15, // 13: wallet.PayWalletRechargeListTotalRequest.begin_pay_time:type_name -> google.protobuf.Timestamp
	15, // 14: wallet.PayWalletRechargeListTotalRequest.finish_pay_time:type_name -> google.protobuf.Timestamp
	15, // 15: wallet.PayWalletRechargeListTotalRequest.begin_refund_time:type_name -> google.protobuf.Timestamp
	15, // 16: wallet.PayWalletRechargeListTotalRequest.finish_refund_time:type_name -> google.protobuf.Timestamp
	2,  // 17: wallet.PayWalletRechargeService.PayWalletRechargeCreate:input_type -> wallet.PayWalletRechargeCreateRequest
	4,  // 18: wallet.PayWalletRechargeService.PayWalletRechargeUpdate:input_type -> wallet.PayWalletRechargeUpdateRequest
	6,  // 19: wallet.PayWalletRechargeService.PayWalletRechargeDelete:input_type -> wallet.PayWalletRechargeDeleteRequest
	8,  // 20: wallet.PayWalletRechargeService.PayWalletRecharge:input_type -> wallet.PayWalletRechargeRequest
	10, // 21: wallet.PayWalletRechargeService.PayWalletRechargeRecover:input_type -> wallet.PayWalletRechargeRecoverRequest
	12, // 22: wallet.PayWalletRechargeService.PayWalletRechargeList:input_type -> wallet.PayWalletRechargeListRequest
	14, // 23: wallet.PayWalletRechargeService.PayWalletRechargeListTotal:input_type -> wallet.PayWalletRechargeListTotalRequest
	3,  // 24: wallet.PayWalletRechargeService.PayWalletRechargeCreate:output_type -> wallet.PayWalletRechargeCreateResponse
	5,  // 25: wallet.PayWalletRechargeService.PayWalletRechargeUpdate:output_type -> wallet.PayWalletRechargeUpdateResponse
	7,  // 26: wallet.PayWalletRechargeService.PayWalletRechargeDelete:output_type -> wallet.PayWalletRechargeDeleteResponse
	9,  // 27: wallet.PayWalletRechargeService.PayWalletRecharge:output_type -> wallet.PayWalletRechargeResponse
	11, // 28: wallet.PayWalletRechargeService.PayWalletRechargeRecover:output_type -> wallet.PayWalletRechargeRecoverResponse
	13, // 29: wallet.PayWalletRechargeService.PayWalletRechargeList:output_type -> wallet.PayWalletRechargeListResponse
	1,  // 30: wallet.PayWalletRechargeService.PayWalletRechargeListTotal:output_type -> wallet.PayWalletRechargeTotalResponse
	24, // [24:31] is the sub-list for method output_type
	17, // [17:24] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_pay_wallet_recharge_proto_init() }
func file_pay_wallet_recharge_proto_init() {
	if File_pay_wallet_recharge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pay_wallet_recharge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeTotalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeRecoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeRecoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_wallet_recharge_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayWalletRechargeListTotalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pay_wallet_recharge_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_pay_wallet_recharge_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_pay_wallet_recharge_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pay_wallet_recharge_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pay_wallet_recharge_proto_goTypes,
		DependencyIndexes: file_pay_wallet_recharge_proto_depIdxs,
		MessageInfos:      file_pay_wallet_recharge_proto_msgTypes,
	}.Build()
	File_pay_wallet_recharge_proto = out.File
	file_pay_wallet_recharge_proto_rawDesc = nil
	file_pay_wallet_recharge_proto_goTypes = nil
	file_pay_wallet_recharge_proto_depIdxs = nil
}
