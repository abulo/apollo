// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.1
// source: pay_channel.proto

// pay_channel 支付渠道

package channel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PayChannelObject 数据对象
type PayChannelObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id *int64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id" db:"id"` //商户编号
	// @inject_tag: db:"code" json:"code"
	Code *string `protobuf:"bytes,2,opt,name=code,proto3,oneof" json:"code" db:"code"` //渠道编码
	// @inject_tag: db:"status" json:"status"
	Status *int32 `protobuf:"varint,3,opt,name=status,proto3,oneof" json:"status" db:"status"` //开启状态
	// @inject_tag: db:"remark" json:"remark"
	Remark *string `protobuf:"bytes,4,opt,name=remark,proto3,oneof" json:"remark" db:"remark"` //备注
	// @inject_tag: db:"fee_rate" json:"feeRate"
	FeeRate *float64 `protobuf:"fixed64,5,opt,name=fee_rate,json=feeRate,proto3,oneof" json:"feeRate" db:"fee_rate"` //渠道费率，单位：百分比
	// @inject_tag: db:"app_id" json:"appId"
	AppId *int64 `protobuf:"varint,6,opt,name=app_id,json=appId,proto3,oneof" json:"appId" db:"app_id"` //应用编号
	// @inject_tag: db:"config" json:"config"
	Config []byte `protobuf:"bytes,7,opt,name=config,proto3,oneof" json:"config" db:"config"` //支付渠道配置
	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,8,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` //删除
	// @inject_tag: db:"tenant_id" json:"tenantId"
	TenantId *int64 `protobuf:"varint,9,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenantId" db:"tenant_id"` //租户
	// @inject_tag: db:"creator" json:"creator"
	Creator *string `protobuf:"bytes,10,opt,name=creator,proto3,oneof" json:"creator" db:"creator"` //创建人
	// @inject_tag: db:"create_time" json:"createTime"
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"createTime" db:"create_time"` //创建时间
	// @inject_tag: db:"updater" json:"updater"
	Updater *string `protobuf:"bytes,12,opt,name=updater,proto3,oneof" json:"updater" db:"updater"` //更新人
	// @inject_tag: db:"update_time" json:"updateTime"
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"updateTime" db:"update_time"` //更新时间
}

func (x *PayChannelObject) Reset() {
	*x = PayChannelObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelObject) ProtoMessage() {}

func (x *PayChannelObject) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelObject.ProtoReflect.Descriptor instead.
func (*PayChannelObject) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{0}
}

func (x *PayChannelObject) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PayChannelObject) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *PayChannelObject) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *PayChannelObject) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *PayChannelObject) GetFeeRate() float64 {
	if x != nil && x.FeeRate != nil {
		return *x.FeeRate
	}
	return 0
}

func (x *PayChannelObject) GetAppId() int64 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *PayChannelObject) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PayChannelObject) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *PayChannelObject) GetTenantId() int64 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *PayChannelObject) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *PayChannelObject) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *PayChannelObject) GetUpdater() string {
	if x != nil && x.Updater != nil {
		return *x.Updater
	}
	return ""
}

func (x *PayChannelObject) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// PayChannelCreateRequest 创建数据请求
type PayChannelCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PayChannelObject `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayChannelCreateRequest) Reset() {
	*x = PayChannelCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelCreateRequest) ProtoMessage() {}

func (x *PayChannelCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelCreateRequest.ProtoReflect.Descriptor instead.
func (*PayChannelCreateRequest) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{1}
}

func (x *PayChannelCreateRequest) GetData() *PayChannelObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// PayChannelCreateResponse 创建数据响应
type PayChannelCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data int64  `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayChannelCreateResponse) Reset() {
	*x = PayChannelCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelCreateResponse) ProtoMessage() {}

func (x *PayChannelCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelCreateResponse.ProtoReflect.Descriptor instead.
func (*PayChannelCreateResponse) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{2}
}

func (x *PayChannelCreateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayChannelCreateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayChannelCreateResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// PayChannelUpdateRequest 更新数据请求
type PayChannelUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //商户编号
	Data *PayChannelObject `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayChannelUpdateRequest) Reset() {
	*x = PayChannelUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelUpdateRequest) ProtoMessage() {}

func (x *PayChannelUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelUpdateRequest.ProtoReflect.Descriptor instead.
func (*PayChannelUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{3}
}

func (x *PayChannelUpdateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayChannelUpdateRequest) GetData() *PayChannelObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// PayChannelUpdateResponse 更新数据响应
type PayChannelUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PayChannelUpdateResponse) Reset() {
	*x = PayChannelUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelUpdateResponse) ProtoMessage() {}

func (x *PayChannelUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelUpdateResponse.ProtoReflect.Descriptor instead.
func (*PayChannelUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{4}
}

func (x *PayChannelUpdateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayChannelUpdateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// PayChannelDeleteRequest 删除数据请求
type PayChannelDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //商户编号
}

func (x *PayChannelDeleteRequest) Reset() {
	*x = PayChannelDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelDeleteRequest) ProtoMessage() {}

func (x *PayChannelDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelDeleteRequest.ProtoReflect.Descriptor instead.
func (*PayChannelDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{5}
}

func (x *PayChannelDeleteRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// PayChannelDeleteResponse 删除数据响应
type PayChannelDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PayChannelDeleteResponse) Reset() {
	*x = PayChannelDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelDeleteResponse) ProtoMessage() {}

func (x *PayChannelDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelDeleteResponse.ProtoReflect.Descriptor instead.
func (*PayChannelDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{6}
}

func (x *PayChannelDeleteResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayChannelDeleteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// PayChannelRequest 查询单条数据请求
type PayChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //商户编号
}

func (x *PayChannelRequest) Reset() {
	*x = PayChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelRequest) ProtoMessage() {}

func (x *PayChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelRequest.ProtoReflect.Descriptor instead.
func (*PayChannelRequest) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{7}
}

func (x *PayChannelRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// PayChannelResponse 查询单条数据响应
type PayChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PayChannelObject `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayChannelResponse) Reset() {
	*x = PayChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelResponse) ProtoMessage() {}

func (x *PayChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelResponse.ProtoReflect.Descriptor instead.
func (*PayChannelResponse) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{8}
}

func (x *PayChannelResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayChannelResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayChannelResponse) GetData() *PayChannelObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// PayChannelRecoverRequest 恢复数据请求
type PayChannelRecoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //商户编号
}

func (x *PayChannelRecoverRequest) Reset() {
	*x = PayChannelRecoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelRecoverRequest) ProtoMessage() {}

func (x *PayChannelRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelRecoverRequest.ProtoReflect.Descriptor instead.
func (*PayChannelRecoverRequest) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{9}
}

func (x *PayChannelRecoverRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// PayChannelRecoverResponse 删除数据响应
type PayChannelRecoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PayChannelRecoverResponse) Reset() {
	*x = PayChannelRecoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelRecoverResponse) ProtoMessage() {}

func (x *PayChannelRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelRecoverResponse.ProtoReflect.Descriptor instead.
func (*PayChannelRecoverResponse) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{10}
}

func (x *PayChannelRecoverResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayChannelRecoverResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// PayChannelCodeRequest 查询单条数据请求
type PayChannelCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"tenant_id" json:"tenantId"
	TenantId *int64 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenantId" db:"tenant_id"` // 租户
	// @inject_tag: db:"app_id" json:"appId"
	AppId *int64 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3,oneof" json:"appId" db:"app_id"` // 应用编号
	// @inject_tag: db:"code" json:"code"
	Code *string `protobuf:"bytes,3,opt,name=code,proto3,oneof" json:"code" db:"code"` // 渠道编码
}

func (x *PayChannelCodeRequest) Reset() {
	*x = PayChannelCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelCodeRequest) ProtoMessage() {}

func (x *PayChannelCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelCodeRequest.ProtoReflect.Descriptor instead.
func (*PayChannelCodeRequest) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{11}
}

func (x *PayChannelCodeRequest) GetTenantId() int64 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *PayChannelCodeRequest) GetAppId() int64 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *PayChannelCodeRequest) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

// PayChannelCodeResponse 查询单条数据响应
type PayChannelCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PayChannelObject `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PayChannelCodeResponse) Reset() {
	*x = PayChannelCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelCodeResponse) ProtoMessage() {}

func (x *PayChannelCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelCodeResponse.ProtoReflect.Descriptor instead.
func (*PayChannelCodeResponse) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{12}
}

func (x *PayChannelCodeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayChannelCodeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayChannelCodeResponse) GetData() *PayChannelObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// PayChannelListRequest 列表数据
type PayChannelListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"tenant_id" json:"tenantId"
	TenantId *int64 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenantId" db:"tenant_id"` // 租户
	// @inject_tag: db:"app_id" json:"appId"
	AppId *int64 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3,oneof" json:"appId" db:"app_id"` // 应用编号
	// @inject_tag: db:"code" json:"code"
	Code *string `protobuf:"bytes,3,opt,name=code,proto3,oneof" json:"code" db:"code"` // 渠道编码
}

func (x *PayChannelListRequest) Reset() {
	*x = PayChannelListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelListRequest) ProtoMessage() {}

func (x *PayChannelListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelListRequest.ProtoReflect.Descriptor instead.
func (*PayChannelListRequest) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{13}
}

func (x *PayChannelListRequest) GetTenantId() int64 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *PayChannelListRequest) GetAppId() int64 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *PayChannelListRequest) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

// PayChannelListResponse 数据响应
type PayChannelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*PayChannelObject `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PayChannelListResponse) Reset() {
	*x = PayChannelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_channel_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayChannelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayChannelListResponse) ProtoMessage() {}

func (x *PayChannelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_channel_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayChannelListResponse.ProtoReflect.Descriptor instead.
func (*PayChannelListResponse) Descriptor() ([]byte, []int) {
	return file_pay_channel_proto_rawDescGZIP(), []int{14}
}

func (x *PayChannelListResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayChannelListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PayChannelListResponse) GetData() []*PayChannelObject {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_pay_channel_proto protoreflect.FileDescriptor

var file_pay_channel_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x04,
	0x0a, 0x10, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x65,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x07,
	0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x06, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0a, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x54, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x40, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x29, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40,
	0x0a, 0x18, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x23, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2a, 0x0a, 0x18, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x19,
	0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x90, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x6d, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x6d, 0x0a, 0x16, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0xe7, 0x04, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x20, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x50,
	0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x50, 0x61,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x23, 0x5a,
	0x21, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70,
	0x61, 0x79, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x3b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pay_channel_proto_rawDescOnce sync.Once
	file_pay_channel_proto_rawDescData = file_pay_channel_proto_rawDesc
)

func file_pay_channel_proto_rawDescGZIP() []byte {
	file_pay_channel_proto_rawDescOnce.Do(func() {
		file_pay_channel_proto_rawDescData = protoimpl.X.CompressGZIP(file_pay_channel_proto_rawDescData)
	})
	return file_pay_channel_proto_rawDescData
}

var file_pay_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_pay_channel_proto_goTypes = []interface{}{
	(*PayChannelObject)(nil),          // 0: channel.PayChannelObject
	(*PayChannelCreateRequest)(nil),   // 1: channel.PayChannelCreateRequest
	(*PayChannelCreateResponse)(nil),  // 2: channel.PayChannelCreateResponse
	(*PayChannelUpdateRequest)(nil),   // 3: channel.PayChannelUpdateRequest
	(*PayChannelUpdateResponse)(nil),  // 4: channel.PayChannelUpdateResponse
	(*PayChannelDeleteRequest)(nil),   // 5: channel.PayChannelDeleteRequest
	(*PayChannelDeleteResponse)(nil),  // 6: channel.PayChannelDeleteResponse
	(*PayChannelRequest)(nil),         // 7: channel.PayChannelRequest
	(*PayChannelResponse)(nil),        // 8: channel.PayChannelResponse
	(*PayChannelRecoverRequest)(nil),  // 9: channel.PayChannelRecoverRequest
	(*PayChannelRecoverResponse)(nil), // 10: channel.PayChannelRecoverResponse
	(*PayChannelCodeRequest)(nil),     // 11: channel.PayChannelCodeRequest
	(*PayChannelCodeResponse)(nil),    // 12: channel.PayChannelCodeResponse
	(*PayChannelListRequest)(nil),     // 13: channel.PayChannelListRequest
	(*PayChannelListResponse)(nil),    // 14: channel.PayChannelListResponse
	(*timestamppb.Timestamp)(nil),     // 15: google.protobuf.Timestamp
}
var file_pay_channel_proto_depIdxs = []int32{
	15, // 0: channel.PayChannelObject.create_time:type_name -> google.protobuf.Timestamp
	15, // 1: channel.PayChannelObject.update_time:type_name -> google.protobuf.Timestamp
	0,  // 2: channel.PayChannelCreateRequest.data:type_name -> channel.PayChannelObject
	0,  // 3: channel.PayChannelUpdateRequest.data:type_name -> channel.PayChannelObject
	0,  // 4: channel.PayChannelResponse.data:type_name -> channel.PayChannelObject
	0,  // 5: channel.PayChannelCodeResponse.data:type_name -> channel.PayChannelObject
	0,  // 6: channel.PayChannelListResponse.data:type_name -> channel.PayChannelObject
	1,  // 7: channel.PayChannelService.PayChannelCreate:input_type -> channel.PayChannelCreateRequest
	3,  // 8: channel.PayChannelService.PayChannelUpdate:input_type -> channel.PayChannelUpdateRequest
	5,  // 9: channel.PayChannelService.PayChannelDelete:input_type -> channel.PayChannelDeleteRequest
	7,  // 10: channel.PayChannelService.PayChannel:input_type -> channel.PayChannelRequest
	9,  // 11: channel.PayChannelService.PayChannelRecover:input_type -> channel.PayChannelRecoverRequest
	11, // 12: channel.PayChannelService.PayChannelCode:input_type -> channel.PayChannelCodeRequest
	13, // 13: channel.PayChannelService.PayChannelList:input_type -> channel.PayChannelListRequest
	2,  // 14: channel.PayChannelService.PayChannelCreate:output_type -> channel.PayChannelCreateResponse
	4,  // 15: channel.PayChannelService.PayChannelUpdate:output_type -> channel.PayChannelUpdateResponse
	6,  // 16: channel.PayChannelService.PayChannelDelete:output_type -> channel.PayChannelDeleteResponse
	8,  // 17: channel.PayChannelService.PayChannel:output_type -> channel.PayChannelResponse
	10, // 18: channel.PayChannelService.PayChannelRecover:output_type -> channel.PayChannelRecoverResponse
	12, // 19: channel.PayChannelService.PayChannelCode:output_type -> channel.PayChannelCodeResponse
	14, // 20: channel.PayChannelService.PayChannelList:output_type -> channel.PayChannelListResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pay_channel_proto_init() }
func file_pay_channel_proto_init() {
	if File_pay_channel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pay_channel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelRecoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelRecoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_channel_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayChannelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pay_channel_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_pay_channel_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_pay_channel_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pay_channel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pay_channel_proto_goTypes,
		DependencyIndexes: file_pay_channel_proto_depIdxs,
		MessageInfos:      file_pay_channel_proto_msgTypes,
	}.Build()
	File_pay_channel_proto = out.File
	file_pay_channel_proto_rawDesc = nil
	file_pay_channel_proto_goTypes = nil
	file_pay_channel_proto_depIdxs = nil
}
