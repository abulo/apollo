// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.1
// source: captcha.proto

// captcha 验证码服务

package captcha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CaptchaGenerateObject 数据对象
type CaptchaGenerateObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"captcha_id" json:"captchaId"
	CaptchaId string `protobuf:"bytes,1,opt,name=captcha_id,json=captchaId,proto3" json:"captchaId" db:"captcha_id"`
	// @inject_tag: db:"captcha_image" json:"captchaImage"
	CaptchaImage string `protobuf:"bytes,2,opt,name=captcha_image,json=captchaImage,proto3" json:"captchaImage" db:"captcha_image"`
}

func (x *CaptchaGenerateObject) Reset() {
	*x = CaptchaGenerateObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_captcha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaGenerateObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaGenerateObject) ProtoMessage() {}

func (x *CaptchaGenerateObject) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaGenerateObject.ProtoReflect.Descriptor instead.
func (*CaptchaGenerateObject) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{0}
}

func (x *CaptchaGenerateObject) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *CaptchaGenerateObject) GetCaptchaImage() string {
	if x != nil {
		return x.CaptchaImage
	}
	return ""
}

// CaptchaVerifyObject 数据对象
type CaptchaVerifyObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CaptchaVerifyObject) Reset() {
	*x = CaptchaVerifyObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_captcha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaVerifyObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaVerifyObject) ProtoMessage() {}

func (x *CaptchaVerifyObject) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaVerifyObject.ProtoReflect.Descriptor instead.
func (*CaptchaVerifyObject) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{1}
}

func (x *CaptchaVerifyObject) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// CaptchaGenerateRequest 验证码生成请求
type CaptchaGenerateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CaptchaGenerateRequest) Reset() {
	*x = CaptchaGenerateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_captcha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaGenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaGenerateRequest) ProtoMessage() {}

func (x *CaptchaGenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaGenerateRequest.ProtoReflect.Descriptor instead.
func (*CaptchaGenerateRequest) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{2}
}

// CaptchaGenerateResponse 验证码生成响应
type CaptchaGenerateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CaptchaGenerateObject `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CaptchaGenerateResponse) Reset() {
	*x = CaptchaGenerateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_captcha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaGenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaGenerateResponse) ProtoMessage() {}

func (x *CaptchaGenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaGenerateResponse.ProtoReflect.Descriptor instead.
func (*CaptchaGenerateResponse) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{3}
}

func (x *CaptchaGenerateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CaptchaGenerateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CaptchaGenerateResponse) GetData() *CaptchaGenerateObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// CaptchaVerifyRequest 验证码验证请求
type CaptchaVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"captcha_id" json:"captchaId"
	CaptchaId string `protobuf:"bytes,1,opt,name=captcha_id,json=captchaId,proto3" json:"captchaId" db:"captcha_id"`
	// @inject_tag: db:"captcha_code" json:"captchaCode"
	CaptchaCode string `protobuf:"bytes,2,opt,name=captcha_code,json=captchaCode,proto3" json:"captchaCode" db:"captcha_code"`
}

func (x *CaptchaVerifyRequest) Reset() {
	*x = CaptchaVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_captcha_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaVerifyRequest) ProtoMessage() {}

func (x *CaptchaVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaVerifyRequest.ProtoReflect.Descriptor instead.
func (*CaptchaVerifyRequest) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{4}
}

func (x *CaptchaVerifyRequest) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *CaptchaVerifyRequest) GetCaptchaCode() string {
	if x != nil {
		return x.CaptchaCode
	}
	return ""
}

// CaptchaVerifyResponse 验证码验证响应
type CaptchaVerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *CaptchaVerifyObject `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CaptchaVerifyResponse) Reset() {
	*x = CaptchaVerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_captcha_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaVerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaVerifyResponse) ProtoMessage() {}

func (x *CaptchaVerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaVerifyResponse.ProtoReflect.Descriptor instead.
func (*CaptchaVerifyResponse) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{5}
}

func (x *CaptchaVerifyResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CaptchaVerifyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CaptchaVerifyResponse) GetData() *CaptchaVerifyObject {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_captcha_proto protoreflect.FileDescriptor

var file_captcha_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x22, 0x5b, 0x0a, 0x15, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x73,
	0x0a, 0x17, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x14, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6f, 0x0a,
	0x15, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xb6,
	0x01, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x54, 0x0a, 0x0f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x43,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e,
	0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x3b, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_captcha_proto_rawDescOnce sync.Once
	file_captcha_proto_rawDescData = file_captcha_proto_rawDesc
)

func file_captcha_proto_rawDescGZIP() []byte {
	file_captcha_proto_rawDescOnce.Do(func() {
		file_captcha_proto_rawDescData = protoimpl.X.CompressGZIP(file_captcha_proto_rawDescData)
	})
	return file_captcha_proto_rawDescData
}

var file_captcha_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_captcha_proto_goTypes = []interface{}{
	(*CaptchaGenerateObject)(nil),   // 0: captcha.CaptchaGenerateObject
	(*CaptchaVerifyObject)(nil),     // 1: captcha.CaptchaVerifyObject
	(*CaptchaGenerateRequest)(nil),  // 2: captcha.CaptchaGenerateRequest
	(*CaptchaGenerateResponse)(nil), // 3: captcha.CaptchaGenerateResponse
	(*CaptchaVerifyRequest)(nil),    // 4: captcha.CaptchaVerifyRequest
	(*CaptchaVerifyResponse)(nil),   // 5: captcha.CaptchaVerifyResponse
}
var file_captcha_proto_depIdxs = []int32{
	0, // 0: captcha.CaptchaGenerateResponse.data:type_name -> captcha.CaptchaGenerateObject
	1, // 1: captcha.CaptchaVerifyResponse.data:type_name -> captcha.CaptchaVerifyObject
	2, // 2: captcha.CaptchaService.CaptchaGenerate:input_type -> captcha.CaptchaGenerateRequest
	4, // 3: captcha.CaptchaService.CaptchaVerify:input_type -> captcha.CaptchaVerifyRequest
	3, // 4: captcha.CaptchaService.CaptchaGenerate:output_type -> captcha.CaptchaGenerateResponse
	5, // 5: captcha.CaptchaService.CaptchaVerify:output_type -> captcha.CaptchaVerifyResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_captcha_proto_init() }
func file_captcha_proto_init() {
	if File_captcha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_captcha_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaGenerateObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_captcha_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaVerifyObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_captcha_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaGenerateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_captcha_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaGenerateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_captcha_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_captcha_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaVerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_captcha_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_captcha_proto_goTypes,
		DependencyIndexes: file_captcha_proto_depIdxs,
		MessageInfos:      file_captcha_proto_msgTypes,
	}.Build()
	File_captcha_proto = out.File
	file_captcha_proto_rawDesc = nil
	file_captcha_proto_goTypes = nil
	file_captcha_proto_depIdxs = nil
}
