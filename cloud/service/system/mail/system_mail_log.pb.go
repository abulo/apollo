// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.1
// source: system_mail_log.proto

// system_mail_log 邮件日志表

package mail

import (
	pagination "cloud/service/pagination"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SystemMailLogObject 数据对象
type SystemMailLogObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id *int64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id" db:"id"` //编号
	// @inject_tag: db:"user_id" json:"userId"
	UserId *int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"userId" db:"user_id"` //用户编号
	// @inject_tag: db:"user_type" json:"userType"
	UserType *int32 `protobuf:"varint,3,opt,name=user_type,json=userType,proto3,oneof" json:"userType" db:"user_type"` //用户类型
	// @inject_tag: db:"to_mail" json:"toMail"
	ToMail *string `protobuf:"bytes,4,opt,name=to_mail,json=toMail,proto3,oneof" json:"toMail" db:"to_mail"` //接收邮箱地址
	// @inject_tag: db:"account_id" json:"accountId"
	AccountId *int64 `protobuf:"varint,5,opt,name=account_id,json=accountId,proto3,oneof" json:"accountId" db:"account_id"` //邮箱账号编号
	// @inject_tag: db:"from_mail" json:"fromMail"
	FromMail *string `protobuf:"bytes,6,opt,name=from_mail,json=fromMail,proto3,oneof" json:"fromMail" db:"from_mail"` //发送邮箱地址
	// @inject_tag: db:"template_id" json:"templateId"
	TemplateId *int64 `protobuf:"varint,7,opt,name=template_id,json=templateId,proto3,oneof" json:"templateId" db:"template_id"` //模板编号
	// @inject_tag: db:"template_code" json:"templateCode"
	TemplateCode *string `protobuf:"bytes,8,opt,name=template_code,json=templateCode,proto3,oneof" json:"templateCode" db:"template_code"` //模板编码
	// @inject_tag: db:"template_nickname" json:"templateNickname"
	TemplateNickname *string `protobuf:"bytes,9,opt,name=template_nickname,json=templateNickname,proto3,oneof" json:"templateNickname" db:"template_nickname"` //模版发送人名称
	// @inject_tag: db:"template_title" json:"templateTitle"
	TemplateTitle *string `protobuf:"bytes,10,opt,name=template_title,json=templateTitle,proto3,oneof" json:"templateTitle" db:"template_title"` //邮件标题
	// @inject_tag: db:"template_content" json:"templateContent"
	TemplateContent *string `protobuf:"bytes,11,opt,name=template_content,json=templateContent,proto3,oneof" json:"templateContent" db:"template_content"` //邮件内容
	// @inject_tag: db:"template_params" json:"templateParams"
	TemplateParams []byte `protobuf:"bytes,12,opt,name=template_params,json=templateParams,proto3,oneof" json:"templateParams" db:"template_params"` //邮件参数
	// @inject_tag: db:"send_status" json:"sendStatus"
	SendStatus *int32 `protobuf:"varint,13,opt,name=send_status,json=sendStatus,proto3,oneof" json:"sendStatus" db:"send_status"` //发送状态
	// @inject_tag: db:"send_time" json:"sendTime"
	SendTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=send_time,json=sendTime,proto3" json:"sendTime" db:"send_time"` //发送时间
	// @inject_tag: db:"send_message_id" json:"sendMessageId"
	SendMessageId *string `protobuf:"bytes,15,opt,name=send_message_id,json=sendMessageId,proto3,oneof" json:"sendMessageId" db:"send_message_id"` //发送返回的消息 ID
	// @inject_tag: db:"send_exception" json:"sendException"
	SendException *string `protobuf:"bytes,16,opt,name=send_exception,json=sendException,proto3,oneof" json:"sendException" db:"send_exception"` //发送异常
	// @inject_tag: db:"creator" json:"creator"
	Creator *string `protobuf:"bytes,17,opt,name=creator,proto3,oneof" json:"creator" db:"creator"` //创建者
	// @inject_tag: db:"create_time" json:"createTime"
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=create_time,json=createTime,proto3" json:"createTime" db:"create_time"` //创建时间
	// @inject_tag: db:"updater" json:"updater"
	Updater *string `protobuf:"bytes,19,opt,name=updater,proto3,oneof" json:"updater" db:"updater"` //更新者
	// @inject_tag: db:"update_time" json:"updateTime"
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=update_time,json=updateTime,proto3" json:"updateTime" db:"update_time"` //更新时间
	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,21,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` //是否删除
}

func (x *SystemMailLogObject) Reset() {
	*x = SystemMailLogObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogObject) ProtoMessage() {}

func (x *SystemMailLogObject) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogObject.ProtoReflect.Descriptor instead.
func (*SystemMailLogObject) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{0}
}

func (x *SystemMailLogObject) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SystemMailLogObject) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *SystemMailLogObject) GetUserType() int32 {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return 0
}

func (x *SystemMailLogObject) GetToMail() string {
	if x != nil && x.ToMail != nil {
		return *x.ToMail
	}
	return ""
}

func (x *SystemMailLogObject) GetAccountId() int64 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *SystemMailLogObject) GetFromMail() string {
	if x != nil && x.FromMail != nil {
		return *x.FromMail
	}
	return ""
}

func (x *SystemMailLogObject) GetTemplateId() int64 {
	if x != nil && x.TemplateId != nil {
		return *x.TemplateId
	}
	return 0
}

func (x *SystemMailLogObject) GetTemplateCode() string {
	if x != nil && x.TemplateCode != nil {
		return *x.TemplateCode
	}
	return ""
}

func (x *SystemMailLogObject) GetTemplateNickname() string {
	if x != nil && x.TemplateNickname != nil {
		return *x.TemplateNickname
	}
	return ""
}

func (x *SystemMailLogObject) GetTemplateTitle() string {
	if x != nil && x.TemplateTitle != nil {
		return *x.TemplateTitle
	}
	return ""
}

func (x *SystemMailLogObject) GetTemplateContent() string {
	if x != nil && x.TemplateContent != nil {
		return *x.TemplateContent
	}
	return ""
}

func (x *SystemMailLogObject) GetTemplateParams() []byte {
	if x != nil {
		return x.TemplateParams
	}
	return nil
}

func (x *SystemMailLogObject) GetSendStatus() int32 {
	if x != nil && x.SendStatus != nil {
		return *x.SendStatus
	}
	return 0
}

func (x *SystemMailLogObject) GetSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SendTime
	}
	return nil
}

func (x *SystemMailLogObject) GetSendMessageId() string {
	if x != nil && x.SendMessageId != nil {
		return *x.SendMessageId
	}
	return ""
}

func (x *SystemMailLogObject) GetSendException() string {
	if x != nil && x.SendException != nil {
		return *x.SendException
	}
	return ""
}

func (x *SystemMailLogObject) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *SystemMailLogObject) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SystemMailLogObject) GetUpdater() string {
	if x != nil && x.Updater != nil {
		return *x.Updater
	}
	return ""
}

func (x *SystemMailLogObject) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *SystemMailLogObject) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

// SystemMailLogTotalResponse 列表数据总量
type SystemMailLogTotalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data int64  `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemMailLogTotalResponse) Reset() {
	*x = SystemMailLogTotalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogTotalResponse) ProtoMessage() {}

func (x *SystemMailLogTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogTotalResponse.ProtoReflect.Descriptor instead.
func (*SystemMailLogTotalResponse) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{1}
}

func (x *SystemMailLogTotalResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemMailLogTotalResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemMailLogTotalResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// SystemMailLogCreateRequest 创建数据请求
type SystemMailLogCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SystemMailLogObject `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemMailLogCreateRequest) Reset() {
	*x = SystemMailLogCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogCreateRequest) ProtoMessage() {}

func (x *SystemMailLogCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogCreateRequest.ProtoReflect.Descriptor instead.
func (*SystemMailLogCreateRequest) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{2}
}

func (x *SystemMailLogCreateRequest) GetData() *SystemMailLogObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemMailLogCreateResponse 创建数据响应
type SystemMailLogCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data int64  `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemMailLogCreateResponse) Reset() {
	*x = SystemMailLogCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogCreateResponse) ProtoMessage() {}

func (x *SystemMailLogCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogCreateResponse.ProtoReflect.Descriptor instead.
func (*SystemMailLogCreateResponse) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{3}
}

func (x *SystemMailLogCreateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemMailLogCreateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemMailLogCreateResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// SystemMailLogUpdateRequest 更新数据请求
type SystemMailLogUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //编号
	Data *SystemMailLogObject `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemMailLogUpdateRequest) Reset() {
	*x = SystemMailLogUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogUpdateRequest) ProtoMessage() {}

func (x *SystemMailLogUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogUpdateRequest.ProtoReflect.Descriptor instead.
func (*SystemMailLogUpdateRequest) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{4}
}

func (x *SystemMailLogUpdateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SystemMailLogUpdateRequest) GetData() *SystemMailLogObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemMailLogUpdateResponse 更新数据响应
type SystemMailLogUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemMailLogUpdateResponse) Reset() {
	*x = SystemMailLogUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogUpdateResponse) ProtoMessage() {}

func (x *SystemMailLogUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogUpdateResponse.ProtoReflect.Descriptor instead.
func (*SystemMailLogUpdateResponse) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{5}
}

func (x *SystemMailLogUpdateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemMailLogUpdateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// SystemMailLogDeleteRequest 删除数据请求
type SystemMailLogDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //编号
}

func (x *SystemMailLogDeleteRequest) Reset() {
	*x = SystemMailLogDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogDeleteRequest) ProtoMessage() {}

func (x *SystemMailLogDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogDeleteRequest.ProtoReflect.Descriptor instead.
func (*SystemMailLogDeleteRequest) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{6}
}

func (x *SystemMailLogDeleteRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// SystemMailLogDeleteResponse 删除数据响应
type SystemMailLogDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemMailLogDeleteResponse) Reset() {
	*x = SystemMailLogDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogDeleteResponse) ProtoMessage() {}

func (x *SystemMailLogDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogDeleteResponse.ProtoReflect.Descriptor instead.
func (*SystemMailLogDeleteResponse) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{7}
}

func (x *SystemMailLogDeleteResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemMailLogDeleteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// SystemMailLogRequest 查询单条数据请求
type SystemMailLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //编号
}

func (x *SystemMailLogRequest) Reset() {
	*x = SystemMailLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogRequest) ProtoMessage() {}

func (x *SystemMailLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogRequest.ProtoReflect.Descriptor instead.
func (*SystemMailLogRequest) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{8}
}

func (x *SystemMailLogRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// SystemMailLogResponse 查询单条数据响应
type SystemMailLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SystemMailLogObject `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemMailLogResponse) Reset() {
	*x = SystemMailLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogResponse) ProtoMessage() {}

func (x *SystemMailLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogResponse.ProtoReflect.Descriptor instead.
func (*SystemMailLogResponse) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{9}
}

func (x *SystemMailLogResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemMailLogResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemMailLogResponse) GetData() *SystemMailLogObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemMailLogRecoverRequest 恢复数据请求
type SystemMailLogRecoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //编号
}

func (x *SystemMailLogRecoverRequest) Reset() {
	*x = SystemMailLogRecoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogRecoverRequest) ProtoMessage() {}

func (x *SystemMailLogRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogRecoverRequest.ProtoReflect.Descriptor instead.
func (*SystemMailLogRecoverRequest) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{10}
}

func (x *SystemMailLogRecoverRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// SystemMailLogRecoverResponse 删除数据响应
type SystemMailLogRecoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemMailLogRecoverResponse) Reset() {
	*x = SystemMailLogRecoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogRecoverResponse) ProtoMessage() {}

func (x *SystemMailLogRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogRecoverResponse.ProtoReflect.Descriptor instead.
func (*SystemMailLogRecoverResponse) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{11}
}

func (x *SystemMailLogRecoverResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemMailLogRecoverResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// SystemMailLogListRequest 列表数据
type SystemMailLogListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,1,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` // 是否删除
	// @inject_tag: db:"send_status" json:"sendStatus"
	SendStatus *int32 `protobuf:"varint,2,opt,name=send_status,json=sendStatus,proto3,oneof" json:"sendStatus" db:"send_status"` // 发送状态
	// @inject_tag: db:"begin_send_time" json:"beginSendTime"
	BeginSendTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=begin_send_time,json=beginSendTime,proto3" json:"beginSendTime" db:"begin_send_time"` // 发送时间
	// @inject_tag: db:"finish_send_time" json:"finishSendTime"
	FinishSendTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=finish_send_time,json=finishSendTime,proto3" json:"finishSendTime" db:"finish_send_time"` // 发送时间
	// @inject_tag: db:"template_title" json:"templateTitle"
	TemplateTitle *string `protobuf:"bytes,5,opt,name=template_title,json=templateTitle,proto3,oneof" json:"templateTitle" db:"template_title"` // 邮件标题
	// @inject_tag: db:"user_id" json:"userId"
	UserId *int64 `protobuf:"varint,6,opt,name=user_id,json=userId,proto3,oneof" json:"userId" db:"user_id"` // 用户编号
	// @inject_tag: db:"user_type" json:"userType"
	UserType *int32 `protobuf:"varint,7,opt,name=user_type,json=userType,proto3,oneof" json:"userType" db:"user_type"` // 用户类型
	// @inject_tag: db:"account_id" json:"accountId"
	AccountId *int64 `protobuf:"varint,8,opt,name=account_id,json=accountId,proto3,oneof" json:"accountId" db:"account_id"` // 邮箱账号编号
	// @inject_tag: db:"template_code" json:"templateCode"
	TemplateCode *string `protobuf:"bytes,9,opt,name=template_code,json=templateCode,proto3,oneof" json:"templateCode" db:"template_code"` // 模板编码
	// @inject_tag: db:"pagination" json:"pagination"
	Pagination *pagination.PaginationRequest `protobuf:"bytes,10,opt,name=pagination,proto3,oneof" json:"pagination" db:"pagination"` // 分页
}

func (x *SystemMailLogListRequest) Reset() {
	*x = SystemMailLogListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogListRequest) ProtoMessage() {}

func (x *SystemMailLogListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogListRequest.ProtoReflect.Descriptor instead.
func (*SystemMailLogListRequest) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{12}
}

func (x *SystemMailLogListRequest) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *SystemMailLogListRequest) GetSendStatus() int32 {
	if x != nil && x.SendStatus != nil {
		return *x.SendStatus
	}
	return 0
}

func (x *SystemMailLogListRequest) GetBeginSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginSendTime
	}
	return nil
}

func (x *SystemMailLogListRequest) GetFinishSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishSendTime
	}
	return nil
}

func (x *SystemMailLogListRequest) GetTemplateTitle() string {
	if x != nil && x.TemplateTitle != nil {
		return *x.TemplateTitle
	}
	return ""
}

func (x *SystemMailLogListRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *SystemMailLogListRequest) GetUserType() int32 {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return 0
}

func (x *SystemMailLogListRequest) GetAccountId() int64 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *SystemMailLogListRequest) GetTemplateCode() string {
	if x != nil && x.TemplateCode != nil {
		return *x.TemplateCode
	}
	return ""
}

func (x *SystemMailLogListRequest) GetPagination() *pagination.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// SystemMailLogListResponse 数据响应
type SystemMailLogListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*SystemMailLogObject `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemMailLogListResponse) Reset() {
	*x = SystemMailLogListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogListResponse) ProtoMessage() {}

func (x *SystemMailLogListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogListResponse.ProtoReflect.Descriptor instead.
func (*SystemMailLogListResponse) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{13}
}

func (x *SystemMailLogListResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemMailLogListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemMailLogListResponse) GetData() []*SystemMailLogObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemMailLogListTotalRequest 列表数据
type SystemMailLogListTotalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,1,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` // 是否删除
	// @inject_tag: db:"send_status" json:"sendStatus"
	SendStatus *int32 `protobuf:"varint,2,opt,name=send_status,json=sendStatus,proto3,oneof" json:"sendStatus" db:"send_status"` // 发送状态
	// @inject_tag: db:"begin_send_time" json:"beginSendTime"
	BeginSendTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=begin_send_time,json=beginSendTime,proto3" json:"beginSendTime" db:"begin_send_time"` // 发送时间
	// @inject_tag: db:"finish_send_time" json:"finishSendTime"
	FinishSendTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=finish_send_time,json=finishSendTime,proto3" json:"finishSendTime" db:"finish_send_time"` // 发送时间
	// @inject_tag: db:"template_title" json:"templateTitle"
	TemplateTitle *string `protobuf:"bytes,5,opt,name=template_title,json=templateTitle,proto3,oneof" json:"templateTitle" db:"template_title"` // 邮件标题
	// @inject_tag: db:"user_id" json:"userId"
	UserId *int64 `protobuf:"varint,6,opt,name=user_id,json=userId,proto3,oneof" json:"userId" db:"user_id"` // 用户编号
	// @inject_tag: db:"user_type" json:"userType"
	UserType *int32 `protobuf:"varint,7,opt,name=user_type,json=userType,proto3,oneof" json:"userType" db:"user_type"` // 用户类型
	// @inject_tag: db:"account_id" json:"accountId"
	AccountId *int64 `protobuf:"varint,8,opt,name=account_id,json=accountId,proto3,oneof" json:"accountId" db:"account_id"` // 邮箱账号编号
	// @inject_tag: db:"template_code" json:"templateCode"
	TemplateCode *string `protobuf:"bytes,9,opt,name=template_code,json=templateCode,proto3,oneof" json:"templateCode" db:"template_code"` // 模板编码
}

func (x *SystemMailLogListTotalRequest) Reset() {
	*x = SystemMailLogListTotalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_mail_log_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemMailLogListTotalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMailLogListTotalRequest) ProtoMessage() {}

func (x *SystemMailLogListTotalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_mail_log_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMailLogListTotalRequest.ProtoReflect.Descriptor instead.
func (*SystemMailLogListTotalRequest) Descriptor() ([]byte, []int) {
	return file_system_mail_log_proto_rawDescGZIP(), []int{14}
}

func (x *SystemMailLogListTotalRequest) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *SystemMailLogListTotalRequest) GetSendStatus() int32 {
	if x != nil && x.SendStatus != nil {
		return *x.SendStatus
	}
	return 0
}

func (x *SystemMailLogListTotalRequest) GetBeginSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginSendTime
	}
	return nil
}

func (x *SystemMailLogListTotalRequest) GetFinishSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishSendTime
	}
	return nil
}

func (x *SystemMailLogListTotalRequest) GetTemplateTitle() string {
	if x != nil && x.TemplateTitle != nil {
		return *x.TemplateTitle
	}
	return ""
}

func (x *SystemMailLogListTotalRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *SystemMailLogListTotalRequest) GetUserType() int32 {
	if x != nil && x.UserType != nil {
		return *x.UserType
	}
	return 0
}

func (x *SystemMailLogListTotalRequest) GetAccountId() int64 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *SystemMailLogListTotalRequest) GetTemplateCode() string {
	if x != nil && x.TemplateCode != nil {
		return *x.TemplateCode
	}
	return ""
}

var File_system_mail_log_proto protoreflect.FileDescriptor

var file_system_mail_log_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x6f,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x82, 0x09, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c,
	0x6f, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x06, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x10,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0d, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x2c, 0x0a, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x0b, 0x52, 0x0e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x0c, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x0f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0e, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x48, 0x11,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x56, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d,
	0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a,
	0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x1b, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69,
	0x6c, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69,
	0x6c, 0x4c, 0x6f, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x43, 0x0a, 0x1b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2c, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d,
	0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x1b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69,
	0x6c, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x26, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x6c, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c,
	0x6f, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2d,
	0x0a, 0x1b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a,
	0x1c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0xe0, 0x04, 0x0a, 0x18, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61,
	0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x05, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x07, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x92, 0x04, 0x0a, 0x1d, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x42, 0x0a, 0x0f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x8a, 0x05,
	0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c,
	0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69,
	0x6c, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c,
	0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61,
	0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69,
	0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69,
	0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x6f, 0x67, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x20, 0x5a, 0x1e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x3b, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_mail_log_proto_rawDescOnce sync.Once
	file_system_mail_log_proto_rawDescData = file_system_mail_log_proto_rawDesc
)

func file_system_mail_log_proto_rawDescGZIP() []byte {
	file_system_mail_log_proto_rawDescOnce.Do(func() {
		file_system_mail_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_mail_log_proto_rawDescData)
	})
	return file_system_mail_log_proto_rawDescData
}

var file_system_mail_log_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_system_mail_log_proto_goTypes = []interface{}{
	(*SystemMailLogObject)(nil),           // 0: mail.SystemMailLogObject
	(*SystemMailLogTotalResponse)(nil),    // 1: mail.SystemMailLogTotalResponse
	(*SystemMailLogCreateRequest)(nil),    // 2: mail.SystemMailLogCreateRequest
	(*SystemMailLogCreateResponse)(nil),   // 3: mail.SystemMailLogCreateResponse
	(*SystemMailLogUpdateRequest)(nil),    // 4: mail.SystemMailLogUpdateRequest
	(*SystemMailLogUpdateResponse)(nil),   // 5: mail.SystemMailLogUpdateResponse
	(*SystemMailLogDeleteRequest)(nil),    // 6: mail.SystemMailLogDeleteRequest
	(*SystemMailLogDeleteResponse)(nil),   // 7: mail.SystemMailLogDeleteResponse
	(*SystemMailLogRequest)(nil),          // 8: mail.SystemMailLogRequest
	(*SystemMailLogResponse)(nil),         // 9: mail.SystemMailLogResponse
	(*SystemMailLogRecoverRequest)(nil),   // 10: mail.SystemMailLogRecoverRequest
	(*SystemMailLogRecoverResponse)(nil),  // 11: mail.SystemMailLogRecoverResponse
	(*SystemMailLogListRequest)(nil),      // 12: mail.SystemMailLogListRequest
	(*SystemMailLogListResponse)(nil),     // 13: mail.SystemMailLogListResponse
	(*SystemMailLogListTotalRequest)(nil), // 14: mail.SystemMailLogListTotalRequest
	(*timestamppb.Timestamp)(nil),         // 15: google.protobuf.Timestamp
	(*pagination.PaginationRequest)(nil),  // 16: pagination.PaginationRequest
}
var file_system_mail_log_proto_depIdxs = []int32{
	15, // 0: mail.SystemMailLogObject.send_time:type_name -> google.protobuf.Timestamp
	15, // 1: mail.SystemMailLogObject.create_time:type_name -> google.protobuf.Timestamp
	15, // 2: mail.SystemMailLogObject.update_time:type_name -> google.protobuf.Timestamp
	0,  // 3: mail.SystemMailLogCreateRequest.data:type_name -> mail.SystemMailLogObject
	0,  // 4: mail.SystemMailLogUpdateRequest.data:type_name -> mail.SystemMailLogObject
	0,  // 5: mail.SystemMailLogResponse.data:type_name -> mail.SystemMailLogObject
	15, // 6: mail.SystemMailLogListRequest.begin_send_time:type_name -> google.protobuf.Timestamp
	15, // 7: mail.SystemMailLogListRequest.finish_send_time:type_name -> google.protobuf.Timestamp
	16, // 8: mail.SystemMailLogListRequest.pagination:type_name -> pagination.PaginationRequest
	0,  // 9: mail.SystemMailLogListResponse.data:type_name -> mail.SystemMailLogObject
	15, // 10: mail.SystemMailLogListTotalRequest.begin_send_time:type_name -> google.protobuf.Timestamp
	15, // 11: mail.SystemMailLogListTotalRequest.finish_send_time:type_name -> google.protobuf.Timestamp
	2,  // 12: mail.SystemMailLogService.SystemMailLogCreate:input_type -> mail.SystemMailLogCreateRequest
	4,  // 13: mail.SystemMailLogService.SystemMailLogUpdate:input_type -> mail.SystemMailLogUpdateRequest
	6,  // 14: mail.SystemMailLogService.SystemMailLogDelete:input_type -> mail.SystemMailLogDeleteRequest
	8,  // 15: mail.SystemMailLogService.SystemMailLog:input_type -> mail.SystemMailLogRequest
	10, // 16: mail.SystemMailLogService.SystemMailLogRecover:input_type -> mail.SystemMailLogRecoverRequest
	12, // 17: mail.SystemMailLogService.SystemMailLogList:input_type -> mail.SystemMailLogListRequest
	14, // 18: mail.SystemMailLogService.SystemMailLogListTotal:input_type -> mail.SystemMailLogListTotalRequest
	3,  // 19: mail.SystemMailLogService.SystemMailLogCreate:output_type -> mail.SystemMailLogCreateResponse
	5,  // 20: mail.SystemMailLogService.SystemMailLogUpdate:output_type -> mail.SystemMailLogUpdateResponse
	7,  // 21: mail.SystemMailLogService.SystemMailLogDelete:output_type -> mail.SystemMailLogDeleteResponse
	9,  // 22: mail.SystemMailLogService.SystemMailLog:output_type -> mail.SystemMailLogResponse
	11, // 23: mail.SystemMailLogService.SystemMailLogRecover:output_type -> mail.SystemMailLogRecoverResponse
	13, // 24: mail.SystemMailLogService.SystemMailLogList:output_type -> mail.SystemMailLogListResponse
	1,  // 25: mail.SystemMailLogService.SystemMailLogListTotal:output_type -> mail.SystemMailLogTotalResponse
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_system_mail_log_proto_init() }
func file_system_mail_log_proto_init() {
	if File_system_mail_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_system_mail_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogTotalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogRecoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogRecoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_mail_log_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemMailLogListTotalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_system_mail_log_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_system_mail_log_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_system_mail_log_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_mail_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_system_mail_log_proto_goTypes,
		DependencyIndexes: file_system_mail_log_proto_depIdxs,
		MessageInfos:      file_system_mail_log_proto_msgTypes,
	}.Build()
	File_system_mail_log_proto = out.File
	file_system_mail_log_proto_rawDesc = nil
	file_system_mail_log_proto_goTypes = nil
	file_system_mail_log_proto_depIdxs = nil
}
