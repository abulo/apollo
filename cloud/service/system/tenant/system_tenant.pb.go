// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.20.3
// source: tenant/system_tenant.proto

// system_tenant 租户

package tenant

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SystemTenantObject 数据对象
type SystemTenantObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id *int64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id" db:"id"` //租户编号
	// @inject_tag: db:"name" json:"name"
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name" db:"name"` //租户名称
	// @inject_tag: db:"system_user_id" json:"systemUserId"
	SystemUserId *int64 `protobuf:"varint,3,opt,name=system_user_id,json=systemUserId,proto3,oneof" json:"systemUserId" db:"system_user_id"` //联系人ID
	// @inject_tag: db:"contact_name" json:"contactName"
	ContactName *string `protobuf:"bytes,4,opt,name=contact_name,json=contactName,proto3,oneof" json:"contactName" db:"contact_name"` //联系人
	// @inject_tag: db:"contact_mobile" json:"contactMobile"
	ContactMobile *string `protobuf:"bytes,5,opt,name=contact_mobile,json=contactMobile,proto3,oneof" json:"contactMobile" db:"contact_mobile"` //租户联系电话
	// @inject_tag: db:"status" json:"status"
	Status *int32 `protobuf:"varint,6,opt,name=status,proto3,oneof" json:"status" db:"status"` //状态（0正常 1停用）
	// @inject_tag: db:"domain" json:"domain"
	Domain *string `protobuf:"bytes,7,opt,name=domain,proto3,oneof" json:"domain" db:"domain"` //域名
	// @inject_tag: db:"expire_date" json:"expireDate"
	ExpireDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expire_date,json=expireDate,proto3" json:"expireDate" db:"expire_date"` //过期时间
	// @inject_tag: db:"account_count" json:"accountCount"
	AccountCount *int64 `protobuf:"varint,9,opt,name=account_count,json=accountCount,proto3,oneof" json:"accountCount" db:"account_count"` //账号数量
	// @inject_tag: db:"system_tenant_package_id" json:"systemTenantPackageId"
	SystemTenantPackageId *int64 `protobuf:"varint,10,opt,name=system_tenant_package_id,json=systemTenantPackageId,proto3,oneof" json:"systemTenantPackageId" db:"system_tenant_package_id"` //套餐编号
	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,11,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` //是否删除(0否 1是)
	// @inject_tag: db:"creator" json:"creator"
	Creator *string `protobuf:"bytes,12,opt,name=creator,proto3,oneof" json:"creator" db:"creator"` //创建人
	// @inject_tag: db:"create_time" json:"createTime"
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" json:"createTime" db:"create_time"` //创建时间
	// @inject_tag: db:"updater" json:"updater"
	Updater *string `protobuf:"bytes,14,opt,name=updater,proto3,oneof" json:"updater" db:"updater"` //更新人
	// @inject_tag: db:"update_time" json:"updateTime"
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"updateTime" db:"update_time"` //更新时间
	// @inject_tag: db:"username" json:"username"
	Username *string `protobuf:"bytes,16,opt,name=username,proto3,oneof" json:"username" db:"username"` //用户名称
	// @inject_tag: db:"password" json:"password"
	Password *string `protobuf:"bytes,17,opt,name=password,proto3,oneof" json:"password" db:"password"` //用户密码
}

func (x *SystemTenantObject) Reset() {
	*x = SystemTenantObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantObject) ProtoMessage() {}

func (x *SystemTenantObject) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantObject.ProtoReflect.Descriptor instead.
func (*SystemTenantObject) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{0}
}

func (x *SystemTenantObject) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SystemTenantObject) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SystemTenantObject) GetSystemUserId() int64 {
	if x != nil && x.SystemUserId != nil {
		return *x.SystemUserId
	}
	return 0
}

func (x *SystemTenantObject) GetContactName() string {
	if x != nil && x.ContactName != nil {
		return *x.ContactName
	}
	return ""
}

func (x *SystemTenantObject) GetContactMobile() string {
	if x != nil && x.ContactMobile != nil {
		return *x.ContactMobile
	}
	return ""
}

func (x *SystemTenantObject) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SystemTenantObject) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *SystemTenantObject) GetExpireDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireDate
	}
	return nil
}

func (x *SystemTenantObject) GetAccountCount() int64 {
	if x != nil && x.AccountCount != nil {
		return *x.AccountCount
	}
	return 0
}

func (x *SystemTenantObject) GetSystemTenantPackageId() int64 {
	if x != nil && x.SystemTenantPackageId != nil {
		return *x.SystemTenantPackageId
	}
	return 0
}

func (x *SystemTenantObject) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *SystemTenantObject) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *SystemTenantObject) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SystemTenantObject) GetUpdater() string {
	if x != nil && x.Updater != nil {
		return *x.Updater
	}
	return ""
}

func (x *SystemTenantObject) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *SystemTenantObject) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *SystemTenantObject) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

// SystemTenantTotalResponse 列表数据总量
type SystemTenantTotalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data int64  `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemTenantTotalResponse) Reset() {
	*x = SystemTenantTotalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantTotalResponse) ProtoMessage() {}

func (x *SystemTenantTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantTotalResponse.ProtoReflect.Descriptor instead.
func (*SystemTenantTotalResponse) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{1}
}

func (x *SystemTenantTotalResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemTenantTotalResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemTenantTotalResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// SystemTenantCreateRequest 创建数据请求
type SystemTenantCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SystemTenantObject `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemTenantCreateRequest) Reset() {
	*x = SystemTenantCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantCreateRequest) ProtoMessage() {}

func (x *SystemTenantCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantCreateRequest.ProtoReflect.Descriptor instead.
func (*SystemTenantCreateRequest) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{2}
}

func (x *SystemTenantCreateRequest) GetData() *SystemTenantObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemTenantCreateResponse 创建数据响应
type SystemTenantCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data int64  `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemTenantCreateResponse) Reset() {
	*x = SystemTenantCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantCreateResponse) ProtoMessage() {}

func (x *SystemTenantCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantCreateResponse.ProtoReflect.Descriptor instead.
func (*SystemTenantCreateResponse) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{3}
}

func (x *SystemTenantCreateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemTenantCreateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemTenantCreateResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// SystemTenantUpdateRequest 更新数据请求
type SystemTenantUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"system_tenant_id" json:"systemTenantId"
	SystemTenantId int64               `protobuf:"varint,1,opt,name=system_tenant_id,json=systemTenantId,proto3" json:"systemTenantId" db:"system_tenant_id"` //租户编号
	Data           *SystemTenantObject `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemTenantUpdateRequest) Reset() {
	*x = SystemTenantUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantUpdateRequest) ProtoMessage() {}

func (x *SystemTenantUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantUpdateRequest.ProtoReflect.Descriptor instead.
func (*SystemTenantUpdateRequest) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{4}
}

func (x *SystemTenantUpdateRequest) GetSystemTenantId() int64 {
	if x != nil {
		return x.SystemTenantId
	}
	return 0
}

func (x *SystemTenantUpdateRequest) GetData() *SystemTenantObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemTenantUpdateResponse 更新数据响应
type SystemTenantUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemTenantUpdateResponse) Reset() {
	*x = SystemTenantUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantUpdateResponse) ProtoMessage() {}

func (x *SystemTenantUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantUpdateResponse.ProtoReflect.Descriptor instead.
func (*SystemTenantUpdateResponse) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{5}
}

func (x *SystemTenantUpdateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemTenantUpdateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// SystemTenantDeleteRequest 删除数据请求
type SystemTenantDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"system_tenant_id" json:"systemTenantId"
	SystemTenantId int64 `protobuf:"varint,1,opt,name=system_tenant_id,json=systemTenantId,proto3" json:"systemTenantId" db:"system_tenant_id"` //租户编号
}

func (x *SystemTenantDeleteRequest) Reset() {
	*x = SystemTenantDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantDeleteRequest) ProtoMessage() {}

func (x *SystemTenantDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantDeleteRequest.ProtoReflect.Descriptor instead.
func (*SystemTenantDeleteRequest) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{6}
}

func (x *SystemTenantDeleteRequest) GetSystemTenantId() int64 {
	if x != nil {
		return x.SystemTenantId
	}
	return 0
}

// SystemTenantDeleteResponse 删除数据响应
type SystemTenantDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemTenantDeleteResponse) Reset() {
	*x = SystemTenantDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantDeleteResponse) ProtoMessage() {}

func (x *SystemTenantDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantDeleteResponse.ProtoReflect.Descriptor instead.
func (*SystemTenantDeleteResponse) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{7}
}

func (x *SystemTenantDeleteResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemTenantDeleteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// SystemTenantRequest 查询单条数据请求
type SystemTenantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"system_tenant_id" json:"systemTenantId"
	SystemTenantId int64 `protobuf:"varint,1,opt,name=system_tenant_id,json=systemTenantId,proto3" json:"systemTenantId" db:"system_tenant_id"` //租户编号
}

func (x *SystemTenantRequest) Reset() {
	*x = SystemTenantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantRequest) ProtoMessage() {}

func (x *SystemTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantRequest.ProtoReflect.Descriptor instead.
func (*SystemTenantRequest) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{8}
}

func (x *SystemTenantRequest) GetSystemTenantId() int64 {
	if x != nil {
		return x.SystemTenantId
	}
	return 0
}

// SystemTenantResponse 查询单条数据响应
type SystemTenantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SystemTenantObject `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemTenantResponse) Reset() {
	*x = SystemTenantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantResponse) ProtoMessage() {}

func (x *SystemTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantResponse.ProtoReflect.Descriptor instead.
func (*SystemTenantResponse) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{9}
}

func (x *SystemTenantResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemTenantResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemTenantResponse) GetData() *SystemTenantObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemTenantRecoverRequest 恢复数据请求
type SystemTenantRecoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"system_tenant_id" json:"systemTenantId"
	SystemTenantId int64 `protobuf:"varint,1,opt,name=system_tenant_id,json=systemTenantId,proto3" json:"systemTenantId" db:"system_tenant_id"` //租户编号
}

func (x *SystemTenantRecoverRequest) Reset() {
	*x = SystemTenantRecoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantRecoverRequest) ProtoMessage() {}

func (x *SystemTenantRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantRecoverRequest.ProtoReflect.Descriptor instead.
func (*SystemTenantRecoverRequest) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{10}
}

func (x *SystemTenantRecoverRequest) GetSystemTenantId() int64 {
	if x != nil {
		return x.SystemTenantId
	}
	return 0
}

// SystemTenantRecoverResponse 删除数据响应
type SystemTenantRecoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemTenantRecoverResponse) Reset() {
	*x = SystemTenantRecoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantRecoverResponse) ProtoMessage() {}

func (x *SystemTenantRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantRecoverResponse.ProtoReflect.Descriptor instead.
func (*SystemTenantRecoverResponse) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{11}
}

func (x *SystemTenantRecoverResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemTenantRecoverResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// SystemTenantListRequest 列表数据
type SystemTenantListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,1,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` // 是否删除(0否 1是)
	// @inject_tag: db:"status" json:"status"
	Status *int32 `protobuf:"varint,2,opt,name=status,proto3,oneof" json:"status" db:"status"` // 状态（0正常 1停用）
	// @inject_tag: db:"name" json:"name"
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name" db:"name"` // 租户名称
	// @inject_tag: db:"begin_expire_date" json:"beginExpireDate"
	BeginExpireDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=begin_expire_date,json=beginExpireDate,proto3" json:"beginExpireDate" db:"begin_expire_date"` // 过期时间
	// @inject_tag: db:"finish_expire_date" json:"finishExpireDate"
	FinishExpireDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=finish_expire_date,json=finishExpireDate,proto3" json:"finishExpireDate" db:"finish_expire_date"` // 过期时间
	// @inject_tag: db:"system_tenant_package_id" json:"systemTenantPackageId"
	SystemTenantPackageId *int64 `protobuf:"varint,6,opt,name=system_tenant_package_id,json=systemTenantPackageId,proto3,oneof" json:"systemTenantPackageId" db:"system_tenant_package_id"` // 套餐编号
	// @inject_tag: db:"page_num" json:"pageNum"
	PageNum *int64 `protobuf:"varint,7,opt,name=page_num,json=pageNum,proto3,oneof" json:"pageNum" db:"page_num"`
	// @inject_tag: db:"page_size" json:"pageSize"
	PageSize *int64 `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3,oneof" json:"pageSize" db:"page_size"`
}

func (x *SystemTenantListRequest) Reset() {
	*x = SystemTenantListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantListRequest) ProtoMessage() {}

func (x *SystemTenantListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantListRequest.ProtoReflect.Descriptor instead.
func (*SystemTenantListRequest) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{12}
}

func (x *SystemTenantListRequest) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *SystemTenantListRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SystemTenantListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SystemTenantListRequest) GetBeginExpireDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginExpireDate
	}
	return nil
}

func (x *SystemTenantListRequest) GetFinishExpireDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishExpireDate
	}
	return nil
}

func (x *SystemTenantListRequest) GetSystemTenantPackageId() int64 {
	if x != nil && x.SystemTenantPackageId != nil {
		return *x.SystemTenantPackageId
	}
	return 0
}

func (x *SystemTenantListRequest) GetPageNum() int64 {
	if x != nil && x.PageNum != nil {
		return *x.PageNum
	}
	return 0
}

func (x *SystemTenantListRequest) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// SystemTenantListResponse 数据响应
type SystemTenantListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*SystemTenantObject `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemTenantListResponse) Reset() {
	*x = SystemTenantListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantListResponse) ProtoMessage() {}

func (x *SystemTenantListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantListResponse.ProtoReflect.Descriptor instead.
func (*SystemTenantListResponse) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{13}
}

func (x *SystemTenantListResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemTenantListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemTenantListResponse) GetData() []*SystemTenantObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemTenantListTotalRequest 列表数据
type SystemTenantListTotalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,1,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` // 是否删除(0否 1是)
	// @inject_tag: db:"status" json:"status"
	Status *int32 `protobuf:"varint,2,opt,name=status,proto3,oneof" json:"status" db:"status"` // 状态（0正常 1停用）
	// @inject_tag: db:"name" json:"name"
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name" db:"name"` // 租户名称
	// @inject_tag: db:"begin_expire_date" json:"beginExpireDate"
	BeginExpireDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=begin_expire_date,json=beginExpireDate,proto3" json:"beginExpireDate" db:"begin_expire_date"` // 过期时间
	// @inject_tag: db:"finish_expire_date" json:"finishExpireDate"
	FinishExpireDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=finish_expire_date,json=finishExpireDate,proto3" json:"finishExpireDate" db:"finish_expire_date"` // 过期时间
	// @inject_tag: db:"system_tenant_package_id" json:"systemTenantPackageId"
	SystemTenantPackageId *int64 `protobuf:"varint,6,opt,name=system_tenant_package_id,json=systemTenantPackageId,proto3,oneof" json:"systemTenantPackageId" db:"system_tenant_package_id"` // 套餐编号
}

func (x *SystemTenantListTotalRequest) Reset() {
	*x = SystemTenantListTotalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tenant_system_tenant_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemTenantListTotalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemTenantListTotalRequest) ProtoMessage() {}

func (x *SystemTenantListTotalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tenant_system_tenant_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemTenantListTotalRequest.ProtoReflect.Descriptor instead.
func (*SystemTenantListTotalRequest) Descriptor() ([]byte, []int) {
	return file_tenant_system_tenant_proto_rawDescGZIP(), []int{14}
}

func (x *SystemTenantListTotalRequest) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *SystemTenantListTotalRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SystemTenantListTotalRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SystemTenantListTotalRequest) GetBeginExpireDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginExpireDate
	}
	return nil
}

func (x *SystemTenantListTotalRequest) GetFinishExpireDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishExpireDate
	}
	return nil
}

func (x *SystemTenantListTotalRequest) GetSystemTenantPackageId() int64 {
	if x != nil && x.SystemTenantPackageId != nil {
		return *x.SystemTenantPackageId
	}
	return 0
}

var File_tenant_system_tenant_proto protoreflect.FileDescriptor

var file_tenant_system_tenant_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x07, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x13, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x02, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x18, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x15,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x09, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0c, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x55, 0x0a, 0x19, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x4b, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x56, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42,
	0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x45, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1a, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3f, 0x0a,
	0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6c,
	0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x1a,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x1b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xd8, 0x03, 0x0a, 0x17, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x11, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x18,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03,
	0x52, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x1b, 0x0a, 0x19,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0x70, 0x0a, 0x18, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x03, 0x0a, 0x1c, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x11,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3c,
	0x0a, 0x18, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x03, 0x52, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x1b, 0x0a, 0x19,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x32, 0x90, 0x05, 0x0a, 0x13, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5b, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x24, 0x2e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tenant_system_tenant_proto_rawDescOnce sync.Once
	file_tenant_system_tenant_proto_rawDescData = file_tenant_system_tenant_proto_rawDesc
)

func file_tenant_system_tenant_proto_rawDescGZIP() []byte {
	file_tenant_system_tenant_proto_rawDescOnce.Do(func() {
		file_tenant_system_tenant_proto_rawDescData = protoimpl.X.CompressGZIP(file_tenant_system_tenant_proto_rawDescData)
	})
	return file_tenant_system_tenant_proto_rawDescData
}

var file_tenant_system_tenant_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_tenant_system_tenant_proto_goTypes = []interface{}{
	(*SystemTenantObject)(nil),           // 0: tenant.SystemTenantObject
	(*SystemTenantTotalResponse)(nil),    // 1: tenant.SystemTenantTotalResponse
	(*SystemTenantCreateRequest)(nil),    // 2: tenant.SystemTenantCreateRequest
	(*SystemTenantCreateResponse)(nil),   // 3: tenant.SystemTenantCreateResponse
	(*SystemTenantUpdateRequest)(nil),    // 4: tenant.SystemTenantUpdateRequest
	(*SystemTenantUpdateResponse)(nil),   // 5: tenant.SystemTenantUpdateResponse
	(*SystemTenantDeleteRequest)(nil),    // 6: tenant.SystemTenantDeleteRequest
	(*SystemTenantDeleteResponse)(nil),   // 7: tenant.SystemTenantDeleteResponse
	(*SystemTenantRequest)(nil),          // 8: tenant.SystemTenantRequest
	(*SystemTenantResponse)(nil),         // 9: tenant.SystemTenantResponse
	(*SystemTenantRecoverRequest)(nil),   // 10: tenant.SystemTenantRecoverRequest
	(*SystemTenantRecoverResponse)(nil),  // 11: tenant.SystemTenantRecoverResponse
	(*SystemTenantListRequest)(nil),      // 12: tenant.SystemTenantListRequest
	(*SystemTenantListResponse)(nil),     // 13: tenant.SystemTenantListResponse
	(*SystemTenantListTotalRequest)(nil), // 14: tenant.SystemTenantListTotalRequest
	(*timestamppb.Timestamp)(nil),        // 15: google.protobuf.Timestamp
}
var file_tenant_system_tenant_proto_depIdxs = []int32{
	15, // 0: tenant.SystemTenantObject.expire_date:type_name -> google.protobuf.Timestamp
	15, // 1: tenant.SystemTenantObject.create_time:type_name -> google.protobuf.Timestamp
	15, // 2: tenant.SystemTenantObject.update_time:type_name -> google.protobuf.Timestamp
	0,  // 3: tenant.SystemTenantCreateRequest.data:type_name -> tenant.SystemTenantObject
	0,  // 4: tenant.SystemTenantUpdateRequest.data:type_name -> tenant.SystemTenantObject
	0,  // 5: tenant.SystemTenantResponse.data:type_name -> tenant.SystemTenantObject
	15, // 6: tenant.SystemTenantListRequest.begin_expire_date:type_name -> google.protobuf.Timestamp
	15, // 7: tenant.SystemTenantListRequest.finish_expire_date:type_name -> google.protobuf.Timestamp
	0,  // 8: tenant.SystemTenantListResponse.data:type_name -> tenant.SystemTenantObject
	15, // 9: tenant.SystemTenantListTotalRequest.begin_expire_date:type_name -> google.protobuf.Timestamp
	15, // 10: tenant.SystemTenantListTotalRequest.finish_expire_date:type_name -> google.protobuf.Timestamp
	2,  // 11: tenant.SystemTenantService.SystemTenantCreate:input_type -> tenant.SystemTenantCreateRequest
	4,  // 12: tenant.SystemTenantService.SystemTenantUpdate:input_type -> tenant.SystemTenantUpdateRequest
	6,  // 13: tenant.SystemTenantService.SystemTenantDelete:input_type -> tenant.SystemTenantDeleteRequest
	8,  // 14: tenant.SystemTenantService.SystemTenant:input_type -> tenant.SystemTenantRequest
	10, // 15: tenant.SystemTenantService.SystemTenantRecover:input_type -> tenant.SystemTenantRecoverRequest
	12, // 16: tenant.SystemTenantService.SystemTenantList:input_type -> tenant.SystemTenantListRequest
	14, // 17: tenant.SystemTenantService.SystemTenantListTotal:input_type -> tenant.SystemTenantListTotalRequest
	3,  // 18: tenant.SystemTenantService.SystemTenantCreate:output_type -> tenant.SystemTenantCreateResponse
	5,  // 19: tenant.SystemTenantService.SystemTenantUpdate:output_type -> tenant.SystemTenantUpdateResponse
	7,  // 20: tenant.SystemTenantService.SystemTenantDelete:output_type -> tenant.SystemTenantDeleteResponse
	9,  // 21: tenant.SystemTenantService.SystemTenant:output_type -> tenant.SystemTenantResponse
	11, // 22: tenant.SystemTenantService.SystemTenantRecover:output_type -> tenant.SystemTenantRecoverResponse
	13, // 23: tenant.SystemTenantService.SystemTenantList:output_type -> tenant.SystemTenantListResponse
	1,  // 24: tenant.SystemTenantService.SystemTenantListTotal:output_type -> tenant.SystemTenantTotalResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_tenant_system_tenant_proto_init() }
func file_tenant_system_tenant_proto_init() {
	if File_tenant_system_tenant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tenant_system_tenant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantTotalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantRecoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantRecoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tenant_system_tenant_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemTenantListTotalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tenant_system_tenant_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_tenant_system_tenant_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_tenant_system_tenant_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tenant_system_tenant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tenant_system_tenant_proto_goTypes,
		DependencyIndexes: file_tenant_system_tenant_proto_depIdxs,
		MessageInfos:      file_tenant_system_tenant_proto_msgTypes,
	}.Build()
	File_tenant_system_tenant_proto = out.File
	file_tenant_system_tenant_proto_rawDesc = nil
	file_tenant_system_tenant_proto_goTypes = nil
	file_tenant_system_tenant_proto_depIdxs = nil
}
