// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.2
// source: system_role_menu.proto

// system_role_menu 系统角色和系统菜单关联表

package role

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	SystemRoleMenuService_SystemRoleMenuCreate_FullMethodName = "/role.SystemRoleMenuService/SystemRoleMenuCreate"
	SystemRoleMenuService_SystemRoleMenuList_FullMethodName   = "/role.SystemRoleMenuService/SystemRoleMenuList"
)

// SystemRoleMenuServiceClient is the client API for SystemRoleMenuService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// SystemRoleMenuService 服务
type SystemRoleMenuServiceClient interface {
	SystemRoleMenuCreate(ctx context.Context, in *SystemRoleMenuCreateRequest, opts ...grpc.CallOption) (*SystemRoleMenuCreateResponse, error)
	SystemRoleMenuList(ctx context.Context, in *SystemRoleMenuListRequest, opts ...grpc.CallOption) (*SystemRoleMenuListResponse, error)
}

type systemRoleMenuServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSystemRoleMenuServiceClient(cc grpc.ClientConnInterface) SystemRoleMenuServiceClient {
	return &systemRoleMenuServiceClient{cc}
}

func (c *systemRoleMenuServiceClient) SystemRoleMenuCreate(ctx context.Context, in *SystemRoleMenuCreateRequest, opts ...grpc.CallOption) (*SystemRoleMenuCreateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SystemRoleMenuCreateResponse)
	err := c.cc.Invoke(ctx, SystemRoleMenuService_SystemRoleMenuCreate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemRoleMenuServiceClient) SystemRoleMenuList(ctx context.Context, in *SystemRoleMenuListRequest, opts ...grpc.CallOption) (*SystemRoleMenuListResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SystemRoleMenuListResponse)
	err := c.cc.Invoke(ctx, SystemRoleMenuService_SystemRoleMenuList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemRoleMenuServiceServer is the server API for SystemRoleMenuService service.
// All implementations must embed UnimplementedSystemRoleMenuServiceServer
// for forward compatibility
//
// SystemRoleMenuService 服务
type SystemRoleMenuServiceServer interface {
	SystemRoleMenuCreate(context.Context, *SystemRoleMenuCreateRequest) (*SystemRoleMenuCreateResponse, error)
	SystemRoleMenuList(context.Context, *SystemRoleMenuListRequest) (*SystemRoleMenuListResponse, error)
	mustEmbedUnimplementedSystemRoleMenuServiceServer()
}

// UnimplementedSystemRoleMenuServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSystemRoleMenuServiceServer struct {
}

func (UnimplementedSystemRoleMenuServiceServer) SystemRoleMenuCreate(context.Context, *SystemRoleMenuCreateRequest) (*SystemRoleMenuCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemRoleMenuCreate not implemented")
}
func (UnimplementedSystemRoleMenuServiceServer) SystemRoleMenuList(context.Context, *SystemRoleMenuListRequest) (*SystemRoleMenuListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemRoleMenuList not implemented")
}
func (UnimplementedSystemRoleMenuServiceServer) mustEmbedUnimplementedSystemRoleMenuServiceServer() {}

// UnsafeSystemRoleMenuServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SystemRoleMenuServiceServer will
// result in compilation errors.
type UnsafeSystemRoleMenuServiceServer interface {
	mustEmbedUnimplementedSystemRoleMenuServiceServer()
}

func RegisterSystemRoleMenuServiceServer(s grpc.ServiceRegistrar, srv SystemRoleMenuServiceServer) {
	s.RegisterService(&SystemRoleMenuService_ServiceDesc, srv)
}

func _SystemRoleMenuService_SystemRoleMenuCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemRoleMenuCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemRoleMenuServiceServer).SystemRoleMenuCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SystemRoleMenuService_SystemRoleMenuCreate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemRoleMenuServiceServer).SystemRoleMenuCreate(ctx, req.(*SystemRoleMenuCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemRoleMenuService_SystemRoleMenuList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemRoleMenuListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemRoleMenuServiceServer).SystemRoleMenuList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SystemRoleMenuService_SystemRoleMenuList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemRoleMenuServiceServer).SystemRoleMenuList(ctx, req.(*SystemRoleMenuListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SystemRoleMenuService_ServiceDesc is the grpc.ServiceDesc for SystemRoleMenuService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SystemRoleMenuService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "role.SystemRoleMenuService",
	HandlerType: (*SystemRoleMenuServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SystemRoleMenuCreate",
			Handler:    _SystemRoleMenuService_SystemRoleMenuCreate_Handler,
		},
		{
			MethodName: "SystemRoleMenuList",
			Handler:    _SystemRoleMenuService_SystemRoleMenuList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "system_role_menu.proto",
}
