// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.1
// source: user/system_user_role.proto

// system_user_role 系统用户和系统角色关联表

package user

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	SystemUserRoleService_SystemUserRoleCreate_FullMethodName = "/user.SystemUserRoleService/SystemUserRoleCreate"
	SystemUserRoleService_SystemUserRoleList_FullMethodName   = "/user.SystemUserRoleService/SystemUserRoleList"
)

// SystemUserRoleServiceClient is the client API for SystemUserRoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// SystemUserRoleService 服务
type SystemUserRoleServiceClient interface {
	SystemUserRoleCreate(ctx context.Context, in *SystemUserRoleCreateRequest, opts ...grpc.CallOption) (*SystemUserRoleCreateResponse, error)
	SystemUserRoleList(ctx context.Context, in *SystemUserRoleListRequest, opts ...grpc.CallOption) (*SystemUserRoleListResponse, error)
}

type systemUserRoleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSystemUserRoleServiceClient(cc grpc.ClientConnInterface) SystemUserRoleServiceClient {
	return &systemUserRoleServiceClient{cc}
}

func (c *systemUserRoleServiceClient) SystemUserRoleCreate(ctx context.Context, in *SystemUserRoleCreateRequest, opts ...grpc.CallOption) (*SystemUserRoleCreateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SystemUserRoleCreateResponse)
	err := c.cc.Invoke(ctx, SystemUserRoleService_SystemUserRoleCreate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemUserRoleServiceClient) SystemUserRoleList(ctx context.Context, in *SystemUserRoleListRequest, opts ...grpc.CallOption) (*SystemUserRoleListResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SystemUserRoleListResponse)
	err := c.cc.Invoke(ctx, SystemUserRoleService_SystemUserRoleList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SystemUserRoleServiceServer is the server API for SystemUserRoleService service.
// All implementations must embed UnimplementedSystemUserRoleServiceServer
// for forward compatibility
//
// SystemUserRoleService 服务
type SystemUserRoleServiceServer interface {
	SystemUserRoleCreate(context.Context, *SystemUserRoleCreateRequest) (*SystemUserRoleCreateResponse, error)
	SystemUserRoleList(context.Context, *SystemUserRoleListRequest) (*SystemUserRoleListResponse, error)
	mustEmbedUnimplementedSystemUserRoleServiceServer()
}

// UnimplementedSystemUserRoleServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSystemUserRoleServiceServer struct {
}

func (UnimplementedSystemUserRoleServiceServer) SystemUserRoleCreate(context.Context, *SystemUserRoleCreateRequest) (*SystemUserRoleCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemUserRoleCreate not implemented")
}
func (UnimplementedSystemUserRoleServiceServer) SystemUserRoleList(context.Context, *SystemUserRoleListRequest) (*SystemUserRoleListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemUserRoleList not implemented")
}
func (UnimplementedSystemUserRoleServiceServer) mustEmbedUnimplementedSystemUserRoleServiceServer() {}

// UnsafeSystemUserRoleServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SystemUserRoleServiceServer will
// result in compilation errors.
type UnsafeSystemUserRoleServiceServer interface {
	mustEmbedUnimplementedSystemUserRoleServiceServer()
}

func RegisterSystemUserRoleServiceServer(s grpc.ServiceRegistrar, srv SystemUserRoleServiceServer) {
	s.RegisterService(&SystemUserRoleService_ServiceDesc, srv)
}

func _SystemUserRoleService_SystemUserRoleCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemUserRoleCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserRoleServiceServer).SystemUserRoleCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SystemUserRoleService_SystemUserRoleCreate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserRoleServiceServer).SystemUserRoleCreate(ctx, req.(*SystemUserRoleCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemUserRoleService_SystemUserRoleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemUserRoleListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemUserRoleServiceServer).SystemUserRoleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SystemUserRoleService_SystemUserRoleList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemUserRoleServiceServer).SystemUserRoleList(ctx, req.(*SystemUserRoleListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SystemUserRoleService_ServiceDesc is the grpc.ServiceDesc for SystemUserRoleService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SystemUserRoleService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "user.SystemUserRoleService",
	HandlerType: (*SystemUserRoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SystemUserRoleCreate",
			Handler:    _SystemUserRoleService_SystemUserRoleCreate_Handler,
		},
		{
			MethodName: "SystemUserRoleList",
			Handler:    _SystemUserRoleService_SystemUserRoleList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/system_user_role.proto",
}
