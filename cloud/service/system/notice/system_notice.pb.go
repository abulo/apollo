// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: notice/system_notice.proto

// system_notice 通知公告表

package notice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SystemNoticeObject 数据对象
type SystemNoticeObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id *int64 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id" db:"id"` //公告ID
	// @inject_tag: db:"title" json:"title"
	Title *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title" db:"title"` //公告标题
	// @inject_tag: db:"content" json:"content"
	Content *string `protobuf:"bytes,3,opt,name=content,proto3,oneof" json:"content" db:"content"` //公告内容
	// @inject_tag: db:"type" json:"type"
	Type *int32 `protobuf:"varint,4,opt,name=type,proto3,oneof" json:"type" db:"type"` //公告类型（1通知 2公告）
	// @inject_tag: db:"status" json:"status"
	Status *int32 `protobuf:"varint,5,opt,name=status,proto3,oneof" json:"status" db:"status"` //公告状态（0正常 1关闭）
	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,6,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` //删除
	// @inject_tag: db:"tenant_id" json:"tenantId"
	TenantId *int64 `protobuf:"varint,7,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenantId" db:"tenant_id"` //租户
	// @inject_tag: db:"creator" json:"creator"
	Creator *string `protobuf:"bytes,8,opt,name=creator,proto3,oneof" json:"creator" db:"creator"` //创建人
	// @inject_tag: db:"create_time" json:"createTime"
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"createTime" db:"create_time"` //创建时间
	// @inject_tag: db:"updater" json:"updater"
	Updater *string `protobuf:"bytes,10,opt,name=updater,proto3,oneof" json:"updater" db:"updater"` //更新人
	// @inject_tag: db:"update_time" json:"updateTime"
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"updateTime" db:"update_time"` //更新时间
}

func (x *SystemNoticeObject) Reset() {
	*x = SystemNoticeObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeObject) ProtoMessage() {}

func (x *SystemNoticeObject) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeObject.ProtoReflect.Descriptor instead.
func (*SystemNoticeObject) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{0}
}

func (x *SystemNoticeObject) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SystemNoticeObject) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *SystemNoticeObject) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *SystemNoticeObject) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SystemNoticeObject) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SystemNoticeObject) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *SystemNoticeObject) GetTenantId() int64 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *SystemNoticeObject) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *SystemNoticeObject) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *SystemNoticeObject) GetUpdater() string {
	if x != nil && x.Updater != nil {
		return *x.Updater
	}
	return ""
}

func (x *SystemNoticeObject) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// SystemNoticeTotalResponse 列表数据总量
type SystemNoticeTotalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data int64  `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemNoticeTotalResponse) Reset() {
	*x = SystemNoticeTotalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeTotalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeTotalResponse) ProtoMessage() {}

func (x *SystemNoticeTotalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeTotalResponse.ProtoReflect.Descriptor instead.
func (*SystemNoticeTotalResponse) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{1}
}

func (x *SystemNoticeTotalResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemNoticeTotalResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemNoticeTotalResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// SystemNoticeCreateRequest 创建数据请求
type SystemNoticeCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SystemNoticeObject `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemNoticeCreateRequest) Reset() {
	*x = SystemNoticeCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeCreateRequest) ProtoMessage() {}

func (x *SystemNoticeCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeCreateRequest.ProtoReflect.Descriptor instead.
func (*SystemNoticeCreateRequest) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{2}
}

func (x *SystemNoticeCreateRequest) GetData() *SystemNoticeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemNoticeCreateResponse 创建数据响应
type SystemNoticeCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data int64  `protobuf:"varint,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemNoticeCreateResponse) Reset() {
	*x = SystemNoticeCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeCreateResponse) ProtoMessage() {}

func (x *SystemNoticeCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeCreateResponse.ProtoReflect.Descriptor instead.
func (*SystemNoticeCreateResponse) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{3}
}

func (x *SystemNoticeCreateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemNoticeCreateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemNoticeCreateResponse) GetData() int64 {
	if x != nil {
		return x.Data
	}
	return 0
}

// SystemNoticeUpdateRequest 更新数据请求
type SystemNoticeUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id   int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //公告ID
	Data *SystemNoticeObject `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemNoticeUpdateRequest) Reset() {
	*x = SystemNoticeUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeUpdateRequest) ProtoMessage() {}

func (x *SystemNoticeUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeUpdateRequest.ProtoReflect.Descriptor instead.
func (*SystemNoticeUpdateRequest) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{4}
}

func (x *SystemNoticeUpdateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SystemNoticeUpdateRequest) GetData() *SystemNoticeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemNoticeUpdateResponse 更新数据响应
type SystemNoticeUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemNoticeUpdateResponse) Reset() {
	*x = SystemNoticeUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeUpdateResponse) ProtoMessage() {}

func (x *SystemNoticeUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeUpdateResponse.ProtoReflect.Descriptor instead.
func (*SystemNoticeUpdateResponse) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{5}
}

func (x *SystemNoticeUpdateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemNoticeUpdateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// SystemNoticeDeleteRequest 删除数据请求
type SystemNoticeDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //公告ID
}

func (x *SystemNoticeDeleteRequest) Reset() {
	*x = SystemNoticeDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeDeleteRequest) ProtoMessage() {}

func (x *SystemNoticeDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeDeleteRequest.ProtoReflect.Descriptor instead.
func (*SystemNoticeDeleteRequest) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{6}
}

func (x *SystemNoticeDeleteRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// SystemNoticeDeleteResponse 删除数据响应
type SystemNoticeDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemNoticeDeleteResponse) Reset() {
	*x = SystemNoticeDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeDeleteResponse) ProtoMessage() {}

func (x *SystemNoticeDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeDeleteResponse.ProtoReflect.Descriptor instead.
func (*SystemNoticeDeleteResponse) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{7}
}

func (x *SystemNoticeDeleteResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemNoticeDeleteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// SystemNoticeRequest 查询单条数据请求
type SystemNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //公告ID
}

func (x *SystemNoticeRequest) Reset() {
	*x = SystemNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeRequest) ProtoMessage() {}

func (x *SystemNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeRequest.ProtoReflect.Descriptor instead.
func (*SystemNoticeRequest) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{8}
}

func (x *SystemNoticeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// SystemNoticeResponse 查询单条数据响应
type SystemNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *SystemNoticeObject `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemNoticeResponse) Reset() {
	*x = SystemNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeResponse) ProtoMessage() {}

func (x *SystemNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeResponse.ProtoReflect.Descriptor instead.
func (*SystemNoticeResponse) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{9}
}

func (x *SystemNoticeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemNoticeResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemNoticeResponse) GetData() *SystemNoticeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemNoticeRecoverRequest 恢复数据请求
type SystemNoticeRecoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"id" json:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id" db:"id"` //公告ID
}

func (x *SystemNoticeRecoverRequest) Reset() {
	*x = SystemNoticeRecoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeRecoverRequest) ProtoMessage() {}

func (x *SystemNoticeRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeRecoverRequest.ProtoReflect.Descriptor instead.
func (*SystemNoticeRecoverRequest) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{10}
}

func (x *SystemNoticeRecoverRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// SystemNoticeRecoverResponse 删除数据响应
type SystemNoticeRecoverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SystemNoticeRecoverResponse) Reset() {
	*x = SystemNoticeRecoverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeRecoverResponse) ProtoMessage() {}

func (x *SystemNoticeRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeRecoverResponse.ProtoReflect.Descriptor instead.
func (*SystemNoticeRecoverResponse) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{11}
}

func (x *SystemNoticeRecoverResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemNoticeRecoverResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// SystemNoticeListRequest 列表数据
type SystemNoticeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"tenant_id" json:"tenantId"
	TenantId *int64 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenantId" db:"tenant_id"` // 租户
	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,2,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` // 删除
	// @inject_tag: db:"status" json:"status"
	Status *int32 `protobuf:"varint,3,opt,name=status,proto3,oneof" json:"status" db:"status"` // 公告状态（0正常 1关闭）
	// @inject_tag: db:"type" json:"type"
	Type *int32 `protobuf:"varint,4,opt,name=type,proto3,oneof" json:"type" db:"type"` // 公告类型（1通知 2公告）
	// @inject_tag: db:"title" json:"title"
	Title *string `protobuf:"bytes,5,opt,name=title,proto3,oneof" json:"title" db:"title"` // 公告标题
	// @inject_tag: db:"page_num" json:"pageNum"
	PageNum *int64 `protobuf:"varint,6,opt,name=page_num,json=pageNum,proto3,oneof" json:"pageNum" db:"page_num"`
	// @inject_tag: db:"page_size" json:"pageSize"
	PageSize *int64 `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3,oneof" json:"pageSize" db:"page_size"`
}

func (x *SystemNoticeListRequest) Reset() {
	*x = SystemNoticeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeListRequest) ProtoMessage() {}

func (x *SystemNoticeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeListRequest.ProtoReflect.Descriptor instead.
func (*SystemNoticeListRequest) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{12}
}

func (x *SystemNoticeListRequest) GetTenantId() int64 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *SystemNoticeListRequest) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *SystemNoticeListRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SystemNoticeListRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SystemNoticeListRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *SystemNoticeListRequest) GetPageNum() int64 {
	if x != nil && x.PageNum != nil {
		return *x.PageNum
	}
	return 0
}

func (x *SystemNoticeListRequest) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// SystemNoticeListResponse 数据响应
type SystemNoticeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*SystemNoticeObject `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SystemNoticeListResponse) Reset() {
	*x = SystemNoticeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeListResponse) ProtoMessage() {}

func (x *SystemNoticeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeListResponse.ProtoReflect.Descriptor instead.
func (*SystemNoticeListResponse) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{13}
}

func (x *SystemNoticeListResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SystemNoticeListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SystemNoticeListResponse) GetData() []*SystemNoticeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

// SystemNoticeListTotalRequest 列表数据
type SystemNoticeListTotalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: db:"tenant_id" json:"tenantId"
	TenantId *int64 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenantId" db:"tenant_id"` // 租户
	// @inject_tag: db:"deleted" json:"deleted"
	Deleted *int32 `protobuf:"varint,2,opt,name=deleted,proto3,oneof" json:"deleted" db:"deleted"` // 删除
	// @inject_tag: db:"status" json:"status"
	Status *int32 `protobuf:"varint,3,opt,name=status,proto3,oneof" json:"status" db:"status"` // 公告状态（0正常 1关闭）
	// @inject_tag: db:"type" json:"type"
	Type *int32 `protobuf:"varint,4,opt,name=type,proto3,oneof" json:"type" db:"type"` // 公告类型（1通知 2公告）
	// @inject_tag: db:"title" json:"title"
	Title *string `protobuf:"bytes,5,opt,name=title,proto3,oneof" json:"title" db:"title"` // 公告标题
}

func (x *SystemNoticeListTotalRequest) Reset() {
	*x = SystemNoticeListTotalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_system_notice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNoticeListTotalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNoticeListTotalRequest) ProtoMessage() {}

func (x *SystemNoticeListTotalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notice_system_notice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNoticeListTotalRequest.ProtoReflect.Descriptor instead.
func (*SystemNoticeListTotalRequest) Descriptor() ([]byte, []int) {
	return file_notice_system_notice_proto_rawDescGZIP(), []int{14}
}

func (x *SystemNoticeListTotalRequest) GetTenantId() int64 {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return 0
}

func (x *SystemNoticeListTotalRequest) GetDeleted() int32 {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return 0
}

func (x *SystemNoticeListTotalRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SystemNoticeListTotalRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SystemNoticeListTotalRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

var File_notice_system_notice_proto protoreflect.FileDescriptor

var file_notice_system_notice_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x03, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x13, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x72, 0x22, 0x55, 0x0a,
	0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x56, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x19, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2b, 0x0a, 0x19, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x25, 0x0a, 0x13, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x6c, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2c, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43,
	0x0a, 0x1b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0xc0, 0x02, 0x0a, 0x17, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x02, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x70, 0x0a, 0x18, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe8, 0x01, 0x0a, 0x1c, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x32, 0x90, 0x05, 0x0a, 0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a,
	0x13, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notice_system_notice_proto_rawDescOnce sync.Once
	file_notice_system_notice_proto_rawDescData = file_notice_system_notice_proto_rawDesc
)

func file_notice_system_notice_proto_rawDescGZIP() []byte {
	file_notice_system_notice_proto_rawDescOnce.Do(func() {
		file_notice_system_notice_proto_rawDescData = protoimpl.X.CompressGZIP(file_notice_system_notice_proto_rawDescData)
	})
	return file_notice_system_notice_proto_rawDescData
}

var file_notice_system_notice_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_notice_system_notice_proto_goTypes = []interface{}{
	(*SystemNoticeObject)(nil),           // 0: notice.SystemNoticeObject
	(*SystemNoticeTotalResponse)(nil),    // 1: notice.SystemNoticeTotalResponse
	(*SystemNoticeCreateRequest)(nil),    // 2: notice.SystemNoticeCreateRequest
	(*SystemNoticeCreateResponse)(nil),   // 3: notice.SystemNoticeCreateResponse
	(*SystemNoticeUpdateRequest)(nil),    // 4: notice.SystemNoticeUpdateRequest
	(*SystemNoticeUpdateResponse)(nil),   // 5: notice.SystemNoticeUpdateResponse
	(*SystemNoticeDeleteRequest)(nil),    // 6: notice.SystemNoticeDeleteRequest
	(*SystemNoticeDeleteResponse)(nil),   // 7: notice.SystemNoticeDeleteResponse
	(*SystemNoticeRequest)(nil),          // 8: notice.SystemNoticeRequest
	(*SystemNoticeResponse)(nil),         // 9: notice.SystemNoticeResponse
	(*SystemNoticeRecoverRequest)(nil),   // 10: notice.SystemNoticeRecoverRequest
	(*SystemNoticeRecoverResponse)(nil),  // 11: notice.SystemNoticeRecoverResponse
	(*SystemNoticeListRequest)(nil),      // 12: notice.SystemNoticeListRequest
	(*SystemNoticeListResponse)(nil),     // 13: notice.SystemNoticeListResponse
	(*SystemNoticeListTotalRequest)(nil), // 14: notice.SystemNoticeListTotalRequest
	(*timestamppb.Timestamp)(nil),        // 15: google.protobuf.Timestamp
}
var file_notice_system_notice_proto_depIdxs = []int32{
	15, // 0: notice.SystemNoticeObject.create_time:type_name -> google.protobuf.Timestamp
	15, // 1: notice.SystemNoticeObject.update_time:type_name -> google.protobuf.Timestamp
	0,  // 2: notice.SystemNoticeCreateRequest.data:type_name -> notice.SystemNoticeObject
	0,  // 3: notice.SystemNoticeUpdateRequest.data:type_name -> notice.SystemNoticeObject
	0,  // 4: notice.SystemNoticeResponse.data:type_name -> notice.SystemNoticeObject
	0,  // 5: notice.SystemNoticeListResponse.data:type_name -> notice.SystemNoticeObject
	2,  // 6: notice.SystemNoticeService.SystemNoticeCreate:input_type -> notice.SystemNoticeCreateRequest
	4,  // 7: notice.SystemNoticeService.SystemNoticeUpdate:input_type -> notice.SystemNoticeUpdateRequest
	6,  // 8: notice.SystemNoticeService.SystemNoticeDelete:input_type -> notice.SystemNoticeDeleteRequest
	8,  // 9: notice.SystemNoticeService.SystemNotice:input_type -> notice.SystemNoticeRequest
	10, // 10: notice.SystemNoticeService.SystemNoticeRecover:input_type -> notice.SystemNoticeRecoverRequest
	12, // 11: notice.SystemNoticeService.SystemNoticeList:input_type -> notice.SystemNoticeListRequest
	14, // 12: notice.SystemNoticeService.SystemNoticeListTotal:input_type -> notice.SystemNoticeListTotalRequest
	3,  // 13: notice.SystemNoticeService.SystemNoticeCreate:output_type -> notice.SystemNoticeCreateResponse
	5,  // 14: notice.SystemNoticeService.SystemNoticeUpdate:output_type -> notice.SystemNoticeUpdateResponse
	7,  // 15: notice.SystemNoticeService.SystemNoticeDelete:output_type -> notice.SystemNoticeDeleteResponse
	9,  // 16: notice.SystemNoticeService.SystemNotice:output_type -> notice.SystemNoticeResponse
	11, // 17: notice.SystemNoticeService.SystemNoticeRecover:output_type -> notice.SystemNoticeRecoverResponse
	13, // 18: notice.SystemNoticeService.SystemNoticeList:output_type -> notice.SystemNoticeListResponse
	1,  // 19: notice.SystemNoticeService.SystemNoticeListTotal:output_type -> notice.SystemNoticeTotalResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_notice_system_notice_proto_init() }
func file_notice_system_notice_proto_init() {
	if File_notice_system_notice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notice_system_notice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeTotalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeRecoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeRecoverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_system_notice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNoticeListTotalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_notice_system_notice_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_notice_system_notice_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_notice_system_notice_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notice_system_notice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notice_system_notice_proto_goTypes,
		DependencyIndexes: file_notice_system_notice_proto_depIdxs,
		MessageInfos:      file_notice_system_notice_proto_msgTypes,
	}.Build()
	File_notice_system_notice_proto = out.File
	file_notice_system_notice_proto_rawDesc = nil
	file_notice_system_notice_proto_goTypes = nil
	file_notice_system_notice_proto_depIdxs = nil
}
