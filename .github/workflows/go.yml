# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "tenant" ]
  pull_request:
    branches: [ "tenant" ]

jobs:
  build: # 声明job的名字(这个job主要用来介绍，可以用做测试go test流程)
    runs-on: ubuntu-latest   # 使用ubuntu系统镜像运行脚本
    # steps定义job的步骤，具体执行，运行xxx，-字符开头的一块则为一个步骤，可以配置多个步骤
    steps:
      - uses: actions/checkout@v2   # 步骤1：下载git仓库中的代码，使用官方提供，使用库用uses关键字
        with:
          clean: false
          GITHUB_WORKSPACE: /home/www/golang/src/apollo
          # path: /home/www/golang/src/apollo       # 代码地址

      - name: SetUp Go              # 步骤2：下载go代码
        uses: actions/setup-go@v3   # 使用官方提供
        with:
          go-version: 1.22          # 指定go版本1.22

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Install linux deps
        run: |
            sudo apt-get -y install libvips-dev

      - name: Build Go              # 步骤3：编译仓库中的代码
        run: go version


# jobs:
#   build:
#     runs-on: ubuntu-latest
#     - uses: actions/checkout@v2   # 步骤1：下载git仓库中的代码，使用官方提供，使用库用uses关键字
#     container:
#       image: abulo/docker-golang:latest
#       volumes:
#         - ./apollo:/home/www/golang/src/apollo
#       options: --cpus 1
#     steps:
#       - name: Check file
#         run: (ls)

# jobs:

#   build:
#     runs-on: ubuntu-latest
#     container:
#       image: abulo/docker-golang:latest
#       volumes:
#         - ./docker/config/openresty/nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
#         - ./docker/config/openresty/nginx/vhost:/usr/local/openresty/nginx/conf/vhost
#         - ./docker/config/hosts:/etc/hosts
#         - ./apollo:/home/www/golang/src/apollo
#         - ./run.sh:/home/www/golang/src/run.sh
#       options: --cpus 1
#     steps:
      # - name: 
      # - name: Check for dockerenv file
        # run: (ls /.dockerenv && echo Found dockerenv) || (echo No dockerenv)
    # - uses: actions/checkout@v3

    # - name: Set up Go
    #   uses: actions/setup-go@v4
    #   with:
    #     go-version: '1.20'

    # - name: Build
    #   run: go build -v ./...

    # - name: Test
      # run: go test -v ./...
